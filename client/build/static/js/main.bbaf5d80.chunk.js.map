{"version":3,"sources":["constants/index.js","components/ShopStore/Products/Product/product.js","components/ShopStore/Products/Products.js","store/actions/productActions.js","store/actions/authActions.js","components/Header/TopHeader/TopHeader.js","store/actions/cartActions.js","components/Header/Header.js","components/ShopStore/ShopStore.js","containers/Shop/Shop.js","components/Message/Error/error.js","containers/Login/login.js","containers/Signup/signup.js","containers/AdminPanel/CategoryManagement/categoryTable.js","components/Message/Success/succeess.js","containers/AdminPanel/CategoryManagement/addCategory.js","containers/AdminPanel/ManagerManagement/managerTable.js","containers/AdminPanel/ManagerManagement/addManager.js","containers/ManagerPanel/productTable.js","containers/ManagerPanel/addProducts.js","store/reducers/authReducers.js","PrivateRoute.js","store/reducers/productReducers.js","containers/ProductDetails/productDetails.js","components/QuantityControl/quantityControl.js","containers/Cart/CartItem/cartItem.js","components/CartPrice/cartPrice.js","containers/Cart/cart.js","store/reducers/cartReducer.js","components/NormalInput/NormalInput.jsx","containers/PlaceOrder/AddressForm/AddressForm.jsx","components/RadioButton/RadioButton.jsx","containers/PlaceOrder/DeliveryAddress/deliveryAddress.js","containers/PlaceOrder/PlaceOrder.js","containers/ThankYou/thankyou.js","containers/Orders/orders.js","App.js","serviceWorker.js","index.js"],"names":["base_url","withRouter","props","url","match","className","to","slug","alt","src","productPic","img","name","starCount","editing","value","rating","renderStarIcon","aria-hidden","price","Products","state","getProducts","categorySlug","filter","then","response","console","log","setState","products","message","applyFilter","params","this","getCategories","prevProps","categories","categoriesAr","push","key","children","length","categoryTree","Object","keys","map","product","_id","id","Component","connect","dispatch","a","query","prop","substring","fetch","json","jsonResponse","status","type","productActions","headers","catch","error","getToken","authData","window","localStorage","getItem","auth","JSON","parse","hasOwnProperty","token","Promise","resolve","TopHeader","dashboard","cart","cartCount","guestAccount","aria-labelledby","isAuthenticated","onClick","logout","user","isAdmin","isManager","data-toggle","data-target","aria-haspopup","aria-expanded","firstName","authActions","getCartItems","userId","method","jsonResposne","cartItems","Header","result","cartActions","clear","payload","ShopStore","categoryTitle","Fragment","path","exact","component","Shop","Error","Login","redirectToReferrer","email","password","isError","errorMessage","textHandler","e","target","setError","loginHandler","preventDefault","RegExp","test","authenticate","setItem","stringify","er","onSubmit","htmlFor","aria-describedby","placeholder","onChange","body","Signup","redirectToreferrer","signupForm","lastName","repassword","updateSignupForm","updatedSignupForm","signupHandler","signup","history","pathname","search","CategoryTable","categoryList","formatDate","date","d","Date","getDate","getMonth","getFullYear","nextProps","nextState","class","scope","createdAt","sub","Success","AddCategory","category","parent","createdBy","isSuccess","success","updatedCategoryForm","categorySubmitHandler","forceUpdate","inputHandler","updatedCategory","categoryForm","msg","ManagerTable","managerList","getManagers","removeManager","manager","AddManager","updatedManagerForm","managerSubmitHandler","updatedManager","managerForm","ProductTable","productList","addDiscounts","ProductId","proID","offer","removeProduct","stock","AddProducts","description","keyword","image","updatedProduct","selectBoxHandler","imageHandler","updatedImage","addProductsHandler","addProducts","initState","authReducers","action","PrivateRoute","rest","render","productReducers","actions","ProductDetails","review","addToCart","productId","cartItem","quantity","addReview","reviews","nextValue","prevValue","productDescription","r","onStarClick","bind","rows","QuantityControl","decreaseQuantity","changeQuantity","increaseQuantity","CartItem","style","width","height","overflow","position","maxWidth","maxHeight","left","transform","total","removeItem","totalAmount","Cart","updateCart","find","item","parseInt","newQuantity","parseFloat","ok","clearCart","location","reload","getItems","cartReducers","itemCount","cItem","totalAmt","quantityCount","updateCartItem","updateItem","NormalInput","input","AddressForm","address","addressSubmitHandler","fullName","mobileNumber","pinCode","locality","cityDistrictTown","landmark","alternateNumber","RadioButton","label","DeliveryAddress","margin","onAddressSelection","PlaceOrder","addresses","alternatePhoneNumber","order","selectedAddress","existingAddress","newAddress","isAddressConfirm","isOrderConfirm","selectedPaymentType","paymentTypes","isActive","getAddresses","updatedAddress","addressSelector","newAddressSelection","updatedAddressList","confirmDeliveryAddress","confirmOrder","selectPaymentOption","submitOrder","paymentType","paymentStatus","display","alignItems","payment","ThankYou","orderId","split","toLocaleUpperCase","Orders","ordersList","getOrders","getOrderTotal","singleOrder","orderTotal","forEach","href","borderBottom","fontSize","color","fontWeight","orderDate","rootReducers","combineReducers","store","createStore","applyMiddleware","thunk","App","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bbaf5d80.chunk.js","sourcesContent":["export const base_url = 'http://localhost:5000';","import React from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport '../style.css';\r\nimport StarRatingComponent from \"react-star-rating-component\";\r\n\r\nconst Product = props => {\r\n\r\n    const url = props.match.url === '/' ? '/products/all' : props.match.url;\r\n\r\n    return (\r\n        <Link className=\"text-link\" to={`${url}/${props.slug}`}>\r\n            <div className=\"Product\">\r\n                <div className=\"ProductImage\">\r\n                    <img alt=\"\" src={props.productPic[0].img} />\r\n                </div>\r\n                <div>\r\n                    <div className=\"product-name\">&nbsp;&nbsp; {props.name}</div>\r\n                    <div className=\"star-rating\">\r\n                        <StarRatingComponent\r\n                            name=\"rating\"\r\n                            starCount={5}\r\n                            editing={false}\r\n                            value={props.rating}\r\n                            renderStarIcon={()=> <i className=\"fa fa-star fa-xs\" aria-hidden=\"true\"/>}/>\r\n                    </div>\r\n                    <div className=\"product-price\">&nbsp;&nbsp; $ {props.price}</div>\r\n\r\n                </div>\r\n            </div>\r\n        </Link>\r\n    );\r\n}\r\n\r\nexport default withRouter(Product);","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport * as productActions from '../../../store/actions/productActions';\r\nimport { connect } from 'react-redux';\r\nimport './style.css';\r\nimport Product from './Product/product';\r\n\r\nclass Products extends Component{\r\n\r\n    state = {\r\n        slug: 'All Products',\r\n    }\r\n\r\n    componentDidMount() {\r\n        const slug = this.props.match.params.slug === 'all' ? '' : this.props.match.params.slug\r\n        this.getProducts(slug);\r\n        this.props.getCategories();\r\n    }\r\n\r\n    getProducts = (categorySlug = '', filter = null) => {\r\n        this.props.getProducts(categorySlug, filter)\r\n            .then(response => {\r\n                console.log(response);\r\n                this.setState({\r\n                    products: response.message\r\n                })\r\n            });\r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n        if(this.props.match.params.slug !== prevProps.match.params.slug){\r\n            this.getProducts(this.props.match.params.slug);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    applyFilter = (filter) => {\r\n        const slug = this.props.match.params.slug === 'all' ? '' : this.props.match.params.slug\r\n        this.getProducts(slug, filter);\r\n    }\r\n\r\n    categoryTree(categories){\r\n        let categoriesAr = [];\r\n        for(let value of categories){\r\n\r\n            categoriesAr.push(\r\n                <li key={value.slug}>\r\n                    <Link className=\"text-link\" to={`/products/${value.slug}`}>{value.name}</Link>\r\n                    {value.children.length > 0 ? (<ul>{this.categoryTree(value.children)}</ul>) : null}\r\n                </li>\r\n            );\r\n        }\r\n\r\n        return categoriesAr;\r\n    }\r\n\r\n    render() {\r\n\r\n        const slug = Object.keys(this.props.match.params).length > 0 ? this.props.match.params.slug : this.state.slug;\r\n\r\n        return (\r\n            <div className=\"Content\">\r\n                <div className=\"ContentTitle\">\r\n                    <h2 className=\"CategoryTitle\">{slug}</h2>\r\n                </div>\r\n                <div className=\"ContentBody\">\r\n                    {/*---------------side menu-----------*/}\r\n                     <div className=\"SideMenu\">\r\n                        <h3 className=\"SideMenuTitle\">Filters</h3>\r\n                        <div className=\"Filter\">\r\n                            <p className=\"FilterTitle\">Categories</p>\r\n                            <ul className=\"list-unstyled\">\r\n                                {\r\n                                    this.props.products.categories.length > 0 ? this.categoryTree(this.props.products.categories) : null\r\n                                }\r\n                            </ul>\r\n                        </div>\r\n\r\n                         {/*<div className=\"Filter\">*/}\r\n                         {/*   <p className=\"FilterTitle\">Price</p>*/}\r\n                         {/*   <div>*/}\r\n                         {/*       <button onClick={() => this.applyFilter({price:1} )} className=\"FilterButton\">Low to High</button>*/}\r\n                         {/*   </div>*/}\r\n                         {/*   <div>*/}\r\n                         {/*       <button onClick={() => this.applyFilter({price: -1})} className=\"FilterButton\">High to Low</button>*/}\r\n                         {/*   </div>*/}\r\n                         {/*</div>*/}\r\n                    </div>\r\n                    {/*---------------products area-----------*/}\r\n                    <div className=\"MainContent\">\r\n                        <div className=\"ProductArea\">\r\n                            {\r\n                                this.props.products.products.map(product => <Product\r\n                                    key={product._id}\r\n                                    id={product._id}\r\n                                    name={product.name}\r\n                                    price={product.price}\r\n                                    productPic={product.productPic}\r\n                                    slug={product.slug}\r\n                                    rating={product.rating}\r\n                                />)\r\n                            }\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getProducts: (categorySlug, filter) => dispatch(productActions.getProducts(categorySlug, filter)),\r\n        getCategories: () => dispatch(productActions.getCategories())\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        products: state.products\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Products);","import { base_url } from \"../../constants\";\r\n\r\nexport const GET_PRODUCTS = 'GET_PRODUCTS';\r\nexport const GET_PRODUCT_CATEGORIES = 'GET_PRODUCT_CATEGORIES';\r\n\r\nexport const addProducts = (token,product) =>{\r\n    return async dispatch =>{\r\n        try {\r\n            const response = await fetch(`${base_url}/products/add`,{\r\n                headers:{\r\n                    'Content-Type': 'application/json',\r\n                    'auth-token': token\r\n                },\r\n                method:'POST',\r\n                body:JSON.stringify({\r\n                    name:product.name,\r\n                    price:product.price,\r\n                    stock:product.stock,\r\n                    description:product.description,\r\n                    productPic:product.productPic[0].img,\r\n                    keyword:product.keyword,\r\n                    category:product.category\r\n\r\n                })\r\n            });\r\n\r\n            const jsonResponse = await response.json();\r\n            return jsonResponse;\r\n        }\r\n        catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const getProducts = (categorySlug = '', filter) => {\r\n    return async dispatch => {\r\n\r\n        try{\r\n\r\n            categorySlug = (categorySlug === 'all') ? '' : categorySlug;\r\n\r\n            let query = '';\r\n            if(filter){\r\n                query = '?filter=1&'\r\n                for(let prop in filter){\r\n                    query += `${prop}=${filter[prop]}&`\r\n                }\r\n                query = query.substring(0, query.length-1);\r\n            }\r\n\r\n            const response = await fetch(`${base_url}/products/${categorySlug}${query}`);\r\n            const jsonResponse = await response.json();\r\n            if(response.status === 200){\r\n                dispatch({\r\n                    type: GET_PRODUCTS,\r\n                    products: jsonResponse.message\r\n                });\r\n            }\r\n            console.log(jsonResponse.message);\r\n            return jsonResponse;\r\n\r\n        }catch(error){\r\n            console.log(error);\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const getCategories = () => {\r\n    return dispatch => {\r\n        fetch(`${base_url}/category`, {\r\n            headers: {\r\n                'Content-Type' : 'application/json'\r\n            }\r\n        })\r\n            .then(response => response.json())\r\n            .then(jsonResponse => {\r\n                dispatch({\r\n                    type: GET_PRODUCT_CATEGORIES,\r\n                    categories: jsonResponse.message\r\n                });\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            });\r\n    }\r\n}\r\n\r\nexport const getSingleProduct = (productSlug) => {\r\n    return async dispatch => {\r\n        try{\r\n\r\n            const response = await fetch(`${base_url}/products/category/${productSlug}`);\r\n            //const jsonResponse = await response.json();\r\n            if(response.status === 200){\r\n\r\n            }\r\n\r\n        }catch(error){\r\n            console.log(error);\r\n        }\r\n    }\r\n}","import { base_url } from \"../../constants\";\r\n\r\nexport const AUTHENTICATE_USER = 'AUTHENTICATE_USER';\r\nexport const LOGOUT_USER = 'LOGOUT_USER';\r\n\r\nexport const signup = (user) => {\r\n    return async dispatch => {\r\n        try{\r\n            const response = await fetch(`${base_url}/user/signup`, {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Accepts': 'application/json'\r\n                },\r\n                method: 'POST',\r\n                body: JSON.stringify({\r\n                    firstName: user.firstName,\r\n                    lastName: user.lastName,\r\n                    email: user.email,\r\n                    password: user.password\r\n                })\r\n            });\r\n            const jsonResponse = await response.json();\r\n            return jsonResponse;\r\n        }catch(error){\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nexport const authenticate = (email, password) => {\r\n    return async dispatch => {\r\n        const response = await fetch(`${base_url}/user/login`, {\r\n            headers: {\r\n                'Content-Type' : 'application/json',\r\n                'Accepts': 'application/json'\r\n            },\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                email: email,\r\n                password: password\r\n            })\r\n        });\r\n\r\n        const jsonResponse = await response.json();\r\n        if(response.status === 200){\r\n\r\n            window.localStorage.setItem('auth', JSON.stringify(response.message));\r\n\r\n            dispatch({\r\n                type: AUTHENTICATE_USER,\r\n                auth: jsonResponse.message\r\n            });\r\n        }\r\n\r\n        return jsonResponse.message;\r\n    }\r\n}\r\n\r\nexport const logout = () => {\r\n    return dispatch => {\r\n        const authData = window.localStorage.getItem('auth');\r\n        if(authData){\r\n            window.localStorage.clear();\r\n            dispatch({\r\n                type: LOGOUT_USER,\r\n                payload: ''\r\n            });\r\n            return Promise.resolve(true);\r\n        }\r\n        return Promise.resolve(false);\r\n    }\r\n}\r\n\r\nexport const getToken = () => {\r\n    return dispatch => {\r\n        const authData = window.localStorage.getItem('auth');\r\n\r\n        if(authData){\r\n            const auth = JSON.parse(authData);\r\n            if(auth.hasOwnProperty('token') && auth.token !== ''){\r\n                dispatch({\r\n                    type: AUTHENTICATE_USER,\r\n                    auth: auth\r\n                });\r\n\r\n                return Promise.resolve(true);\r\n\r\n            }\r\n        }\r\n\r\n        return Promise.resolve(false);\r\n\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport * as authActions from '../../../store/actions/authActions';\r\nimport { connect } from 'react-redux';\r\nimport '../link.styles.css';\r\nimport './topheader.styles.css';\r\n\r\n\r\nclass TopHeader extends Component{\r\n\r\n    componentDidMount() {\r\n        this.props.getToken();\r\n    }\r\n\r\n    render() {\r\n\r\n        let cart =  <ul className=\"navbar-nav\">\r\n            <li className=\"nav-item\">\r\n                <a className=\"nav-link\"><Link className=\"text-link\" to=\"/cart\"><i className=\"fa fa-shopping-cart\"/> ( {this.props.cartCount} ) </Link></a>\r\n            </li>\r\n        </ul>;\r\n\r\n        let dashboard;\r\n\r\n        let guestAccount =  <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdownMenuLink\">\r\n            <li className=\"dropdown-item\"><Link className=\"text-link\" to=\"/signup\"><i className=\"fa fa-user-plus\"/>&nbsp;&nbsp;<span>Register</span></Link></li>\r\n            <li className=\"dropdown-item\"><Link className=\"text-link\" to=\"/login\"><i className=\"fa fa-sign-in\"/>&nbsp;&nbsp;<span>Login</span></Link></li>\r\n        </div>;\r\n\r\n        if(this.props.auth.isAuthenticated){\r\n            guestAccount = <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdownMenuLink\">\r\n                <li className=\"dropdown-item\"><Link className=\"text-link\" to=\"/orders\"><i className=\"fa fa-list-alt\"/>&nbsp;&nbsp;<span>Orders</span></Link></li>\r\n                <li className=\"dropdown-item\"><Link className=\"text-link\" to=\"\" onClick={() => this.props.logout()}><i className=\"fa fa-sign-out\"/>&nbsp;&nbsp;<span>Logout</span></Link></li>\r\n\r\n            </div>;\r\n        }\r\n\r\n        if(this.props.auth.isAuthenticated && this.props.auth.user.isAdmin){\r\n            cart = null;\r\n            guestAccount = <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdownMenuLink\">\r\n                <li className=\"dropdown-item\"><Link className=\"text-link\" to=\"\" onClick={() => this.props.logout()}><i className=\"fa fa-sign-out\"/>&nbsp;&nbsp;<span>Logout</span></Link></li>\r\n            </div>;\r\n\r\n            dashboard = <ul className=\"navbar-nav\">\r\n                <li className=\"nav-item\">\r\n                    <a className=\"nav-link\"><Link to=\"/addcategory\" className=\"text-link\">Categories Management</Link></a>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <a className=\"nav-link\"><Link to=\"/addmanager\" className=\"text-link\">Managers Management</Link></a>\r\n                </li>\r\n            </ul>\r\n        }\r\n\r\n        if(this.props.auth.isAuthenticated && this.props.auth.user.isManager){\r\n            cart = null;\r\n            guestAccount = <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdownMenuLink\">\r\n                <li className=\"dropdown-item\"><Link className=\"text-link\" to=\"\" onClick={() => this.props.logout()}><i className=\"fa fa-sign-out\"/>&nbsp;&nbsp;<span>Logout</span></Link></li>\r\n            </div>;\r\n\r\n            dashboard = <ul className=\"navbar-nav\">\r\n                <li className=\"nav-item\">\r\n                    <a className=\"nav-link\"><Link to=\"/addproduct\" className=\"text-link\">Products Management</Link></a>\r\n                </li>\r\n            </ul>\r\n        }\r\n\r\n\r\n        return (\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n                <a className=\"navbar-brand brand\"><Link className=\"text-link\" to=\"/\">Fashion House</Link></a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavDropdown\">\r\n                    <span className=\"navbar-toggler-icon\"/>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse w-100 order-1 order-md-0 dual-collapse2\" id=\"navbarNavDropdown\">\r\n                    <ul className=\"navbar-nav mr-auto\">\r\n                        {dashboard}\r\n                    </ul>\r\n                    <ul className=\"navbar-nav ml-auto\">\r\n                        {cart}\r\n                        <li className=\"nav-item dropdown\">\r\n                            <Link className=\"nav-link dropdown-toggle text-link\" id=\"navbarDropdownMenuLink\"\r\n                                  data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"\r\n                                  to=\"/account\"><i className=\"fa fa-user-circle-o\"/>&nbsp;&nbsp;{this.props.auth.isAuthenticated ? this.props.auth.user.firstName: 'My Account'}&nbsp;&nbsp;</Link>\r\n                            {guestAccount}\r\n                        </li>\r\n                    </ul>\r\n                    <ul>&nbsp;</ul>\r\n                </div>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        auth: state.auth,\r\n        cart: state.cart\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getToken: () => dispatch(authActions.getToken())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TopHeader);","import { base_url } from \"../../constants\";\r\n\r\nexport const ADD_TO_CART = 'ADD_TO_CART';\r\nexport const GET_CART_DETAILS = 'GET_CART_DETAILS';\r\nexport const UPDATE_CART = 'UPDATE_CART';\r\nexport const CLEAR_CART = 'CLEAR_CART';\r\n\r\nexport const addToCart = (token, cartItem) => {\r\n    return async dispatch => {\r\n        try{\r\n            const response = await fetch(`${base_url}/cart/add`, {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'auth-token': token\r\n                },\r\n                body: JSON.stringify(cartItem),\r\n                method: 'POST'\r\n            });\r\n            const jsonResposne = await response.json();\r\n            if(response.status === 201){\r\n                dispatch({\r\n                    type: ADD_TO_CART,\r\n                    cartItem: cartItem\r\n                });\r\n            }\r\n\r\n            return jsonResposne;\r\n        }catch(error){\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nexport const getCartItems = (token, userId) => {\r\n    return async dispatch => {\r\n\r\n        try{\r\n\r\n            const response = await fetch(`${base_url}/cart/user/${userId}`, {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'auth-token': token\r\n                },\r\n                method: 'POST'\r\n            });\r\n\r\n            const jsonResposne = await response.json();\r\n            if(response.status === 200){\r\n                dispatch({\r\n                    type: GET_CART_DETAILS,\r\n                    cartItems: jsonResposne.message[0]\r\n                });\r\n            }\r\n\r\n            return jsonResposne.message[0];\r\n\r\n        }catch(error){\r\n            console.log(error);\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const updateCart = (token, userId, product) => {\r\n    return async dispatch => {\r\n        try{\r\n\r\n            const response = await fetch(`${base_url}/cart/update/quantity`,{\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'auth-token': token\r\n                },\r\n                method: 'PUT',\r\n                body: JSON.stringify({\r\n                    userId: userId,\r\n                    productId: product.productId,\r\n                    quantity: product.quantity,\r\n                    total: product.total\r\n                })\r\n            });\r\n            const jsonResposne = await response.json();\r\n\r\n            if(response.status === 201){\r\n                dispatch({\r\n                    type: UPDATE_CART,\r\n                    item: product\r\n                });\r\n            }\r\n\r\n            return jsonResposne.message;\r\n\r\n\r\n        }catch(error){\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nexport const clearCart = () => {\r\n    return dispatch => {\r\n        dispatch({\r\n            type: CLEAR_CART,\r\n            payload: null\r\n        });\r\n    }\r\n}\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport TopHeader from \"./TopHeader/TopHeader\";\r\nimport * as cartActions from '../../store/actions/cartActions';\r\nimport * as authActions from '../../store/actions/authActions';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Header extends Component {\r\n\r\n    componentDidMount() {\r\n        if(!this.props.auth.isAuthenticated){\r\n            this.props.getToken()\r\n                .then(result => {\r\n                    if(result){\r\n                        this.props.getCartItems(this.props.auth.token, this.props.auth.user.userId)\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    console.log(error);\r\n                })\r\n        }\r\n    }\r\n\r\n    logout = () => {\r\n        this.props.logout();\r\n    }\r\n\r\n    render() {\r\n        const {isAuthenticated} = this.props.auth;\r\n        const {cart} = this.props;\r\n        const cartCount = isAuthenticated ? cart.cartCount : '';\r\n        return (\r\n            <header className=\"Header\">\r\n                <TopHeader logout={this.logout} cartCount={cartCount}/>\r\n            </header>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        auth: state.auth,\r\n        cart: state.cart\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getToken: () => dispatch(authActions.getToken()),\r\n        getCartItems: (token, userId) => dispatch(cartActions.getCartItems(token, userId)),\r\n        logout: () => dispatch(authActions.logout())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);","import React, { Component } from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport Products from './Products/Products';\r\nimport Header from '../Header/Header';\r\n//import * as authAtions from '../../store/actions/authActions';\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\n\r\n\r\nclass ShopStore extends Component{\r\n\r\n    state={\r\n        categoryTitle: 'Products'\r\n    }\r\n\r\n    render() {\r\n\r\n        console.log('Parents');\r\n        console.log(this.props);\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <Header/>\r\n                <br/>\r\n                <Switch>\r\n                    <Route path=\"/\" exact component={Products} />\r\n                    <Route path=\"/products\" exact component={Products} />\r\n                    <Route path=\"/products/:slug\" component={Products} />\r\n                </Switch>\r\n            </React.Fragment>\r\n\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect(null, null)(ShopStore);","import React, { Component } from 'react';\r\n\r\nimport ShopStore from '../../components/ShopStore/ShopStore';\r\n\r\nclass Shop extends Component{\r\n    render(){\r\n        return (\r\n            <ShopStore />\r\n        );\r\n    }\r\n}\r\n\r\nexport default Shop;","import React from 'react';\r\nimport './error.styles.css';\r\n\r\nconst Error = props => <div className=\"Error\">{props.children}</div>\r\n\r\nexport default Error","import React, { Component } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport * as authActions from '../../store/actions/authActions';\r\nimport { connect } from 'react-redux';\r\nimport Error from '../../components/Message/Error/error';\r\nimport Header from \"../../components/Header/Header\";\r\n\r\n\r\nclass Login extends Component {\r\n\r\n    state = {\r\n        redirectToReferrer: false,\r\n        email: '',\r\n        password: '',\r\n        isAdmin:false,\r\n        isManager:false,\r\n        isError: false,\r\n        errorMessage: ''\r\n    }\r\n\r\n    textHandler = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    setError = (error, message) => {\r\n        this.setState({\r\n            error: error,\r\n            errorMessage: message\r\n        })\r\n    }\r\n\r\n    loginHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(this.state.email === ''){\r\n            this.setError(true, 'Enter Email'); return;\r\n        }\r\n\r\n        const emailPattern = new RegExp(/[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/);\r\n        if(!emailPattern.test(this.state.email)){\r\n            this.setError(true, 'Invalid Email Address'); return;\r\n        }\r\n\r\n        if(this.state.password === ''){\r\n            this.setError(true, 'Enter Password'); return;\r\n        }\r\n\r\n        this.props.authenticate(this.state.email, this.state.password)\r\n            .then(response => {\r\n                console.log(response);\r\n                if(response.hasOwnProperty('token')&&response.hasOwnProperty('admin')){\r\n                    window.localStorage.setItem('auth', JSON.stringify(response))\r\n                    this.setState({\r\n                        redirectToReferrer: true,\r\n                        isAdmin:true,\r\n                        isManager:false\r\n                    });\r\n                }else if(response.hasOwnProperty('token')&&response.hasOwnProperty('manager')){\r\n                    window.localStorage.setItem('auth', JSON.stringify(response))\r\n                    this.setState({\r\n                        redirectToReferrer: true,\r\n                        isAdmin:false,\r\n                        isManager:true\r\n                    });\r\n                }else if(response.hasOwnProperty('token')){\r\n                    window.localStorage.setItem('auth', JSON.stringify(response))\r\n                    this.setState({\r\n                        redirectToReferrer: true,\r\n                        isAdmin:false,\r\n                        isManager:false\r\n                    });\r\n                }\r\n\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(!this.props.auth.isAuthenticated){\r\n            this.props.getToken()\r\n                .then(result => {\r\n                    // result will be either true or false\r\n                    if(result){\r\n                        this.setState({\r\n                            redirectToReferrer: true,\r\n                        });\r\n                    }\r\n                })\r\n                .catch(er => {\r\n                    console.log(er);\r\n                });\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        if(this.state.redirectToReferrer&&this.state.isAdmin)\r\n            return <Redirect to=\"/addcategory\"/>\r\n        if(this.state.redirectToReferrer&&this.state.isManager)\r\n            return <Redirect to=\"/addproduct\"/>\r\n        if(this.state.redirectToReferrer)\r\n            return <Redirect to=\"/\"/>\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <Header/>\r\n            <div className=\"jumbotron bg-transparent d-flex align-items-center\">\r\n                <form className=\"col-md-4 offset-md-4\" onSubmit={this.loginHandler}>\r\n                    <div>\r\n                        <h4>Login</h4>\r\n                    </div>\r\n                    <br/>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"exampleInputEmail1\">Email</label>\r\n                        <input type=\"email\" name=\"email\" className=\"form-control\" aria-describedby=\"emailHelp\" placeholder=\"Enter email\"\r\n                               value={this.state.email}\r\n                               onChange={this.textHandler}/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"exampleInputPassword1\">Password</label>\r\n                        <input type=\"password\" name=\"password\" className=\"form-control\" placeholder=\"Enter password\"\r\n                               value={this.state.password}\r\n                               onChange={this.textHandler}/>\r\n                    </div>\r\n                    <Error>{this.state.errorMessage}</Error>\r\n                    <br/>\r\n                    <div className=\"form-group \">\r\n                        <button type=\"submit\" className=\"btn btn-dark btn-block\">Login</button>\r\n                    </div>\r\n                    <div>\r\n                        <span>Don't have an account ? </span><Link to=\"/signup\"> Register here</Link>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        authenticate: (email, password) => dispatch(authActions.authenticate(email, password)),\r\n        getToken: () => dispatch(authActions.getToken())\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        auth: state.auth\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","import React, { Component } from 'react';\r\nimport * as authActions from '../../store/actions/authActions';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport  { connect } from 'react-redux';\r\nimport Error from '../../components/Message/Error/error';\r\nimport Header from \"../../components/Header/Header\";\r\n\r\nclass Signup extends Component {\r\n\r\n    state = {\r\n        redirectToreferrer: false,\r\n        signupForm: {\r\n            firstName: '',\r\n            lastName: '',\r\n            email: '',\r\n            password: '',\r\n            repassword: '',\r\n            isError: false,\r\n            errorMessage: ''\r\n        }\r\n    }\r\n\r\n    textHandler = (e) => {\r\n        const signupForm = this.state.signupForm;\r\n        const updateSignupForm = {\r\n            ...signupForm,\r\n            [e.target.name] : e.target.value\r\n        }\r\n        console.log('called--');\r\n        this.setState({\r\n            signupForm: updateSignupForm\r\n        })\r\n\r\n    }\r\n\r\n    setError = (error, message) => {\r\n        const { signupForm } = this.state;\r\n        const updatedSignupForm = {\r\n            ...signupForm,\r\n            isError: error,\r\n            errorMessage: message\r\n        }\r\n        this.setState({\r\n            signupForm: updatedSignupForm\r\n        });\r\n    }\r\n\r\n    signupHandler = (e) => {\r\n        e.preventDefault();\r\n        const { signupForm } = this.state;\r\n        if(signupForm.firstName === ''){\r\n            this.setError(true, 'Enter First Name'); return;\r\n        }\r\n        if(signupForm.lastName === ''){\r\n            this.setError(true, 'Enter Last Name');\r\n            return;\r\n        }\r\n\r\n        const emailPattern = new RegExp(/[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/);\r\n        if(!emailPattern.test(signupForm.email)){\r\n            this.setError(true, 'Invalid Email Address'); return;\r\n        }\r\n\r\n        if(signupForm.email === ''){\r\n            this.setError(true, 'Enter Email');\r\n            return;\r\n        }\r\n        if(signupForm.password === ''){\r\n            this.setError(true, 'Enter Password');\r\n            return;\r\n        }\r\n        if(signupForm.repassword === ''){\r\n            this.setError(true, 'Enter Repassword');\r\n            return;\r\n        }\r\n        if(signupForm.password !== signupForm.repassword){\r\n            this.setError(true, 'Password dosent match');\r\n            return;\r\n        }\r\n\r\n        const user = {\r\n            firstName: signupForm.firstName,\r\n            lastName: signupForm.lastName,\r\n            email: signupForm.email,\r\n            password: signupForm.password\r\n        }\r\n\r\n        this.props.signup(user)\r\n            .then(jsonResponse => {\r\n                console.log(jsonResponse);\r\n                this.props.history.push({\r\n                    pathname: '/login',\r\n                    search: '?signup=success',\r\n                    state: jsonResponse.message\r\n                });\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(!this.props.auth.isAuthenticated){\r\n            this.props.getToken()\r\n                .then(result => {\r\n                    // result will be either true or false\r\n                    if(result){\r\n                        this.setState({\r\n                            redirectToreferrer: true\r\n                        });\r\n                    }\r\n\r\n                })\r\n                .catch(er => {\r\n                    console.log(er);\r\n                });\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const { signupForm, redirectToreferrer }  = this.state;\r\n\r\n        if(redirectToreferrer){\r\n            return <Redirect to=\"/\" />\r\n        }\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <Header/>\r\n            <div className=\"jumbotron bg-transparent d-flex align-items-center\">\r\n                <form className=\"col-md-4 offset-md-4\" onSubmit={this.signupHandler} >\r\n                    <div>\r\n                        <h4>Sign Up</h4>\r\n                    </div>\r\n                    <br/>\r\n                    <div className=\"form-row\">\r\n                        <div className=\"form-group col-md-6\">\r\n                            <label htmlFor=\"inputEmail4\">First Name</label>\r\n                            <input type=\"text\" className=\"form-control\" name=\"firstName\" placeholder=\"First Name\"  value={signupForm.firstName} onChange={this.textHandler} />\r\n                        </div>\r\n                        <div className=\"form-group col-md-6\">\r\n                            <label htmlFor=\"inputPassword4\">Last Name</label>\r\n                            <input type=\"text\" className=\"form-control\"  name=\"lastName\" placeholder=\"Last Name\" value={signupForm.lastName} onChange={this.textHandler}/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"inputAddress\">Email</label>\r\n                        <input type=\"email\" className=\"form-control\"  name=\"email\" placeholder=\"Email\" value={signupForm.email} onChange={this.textHandler}/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"inputAddress2\">Password</label>\r\n                        <input type=\"password\" className=\"form-control\" name=\"password\" placeholder=\"Password\" value={signupForm.password} onChange={this.textHandler}/>\r\n                    </div>\r\n                    <div className=\"form-row\">\r\n                        <label htmlFor=\"inputCity\">Re-enter Password</label>\r\n                        <input type=\"password\" className=\"form-control\" name={\"repassword\"} placeholder=\"Password\" value={signupForm.repassword} onChange={this.textHandler}/>\r\n                    </div>\r\n                    <br/>\r\n                    <Error>{this.state.signupForm.errorMessage}</Error>\r\n                    <div className=\"form-group \">\r\n                        <button type=\"submit\" value=\"Submit\" className=\"btn btn-dark btn-block\">Register</button>\r\n                    </div>\r\n                    <div>\r\n                        <span>Already have an account ? </span><Link to=\"/login\"> Login here</Link>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        signup: (user) => dispatch(authActions.signup(user)),\r\n        getToken: () => dispatch(authActions.getToken())\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        auth: state.auth\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Signup);","import React, {Component} from \"react\";\r\nimport {base_url} from \"../../../constants\";\r\nimport * as authActions from \"../../../store/actions/authActions\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass CategoryTable extends Component{\r\n\r\n    state = {\r\n        categoryList: []\r\n    }\r\n\r\n    componentDidMount(){\r\n        if(!this.props.auth.isAuthenticated){\r\n            this.props.getToken()\r\n                .then(result => {\r\n                    if(result){\r\n                        this.getCategories();\r\n                    }else{\r\n                        this.props.history.push('/login');\r\n                    }\r\n                })\r\n        }else{\r\n            this.getCategories();\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        this.getCategories()\r\n    }\r\n\r\n    getCategories = () => {\r\n        const token =  this.props.auth.token;\r\n        fetch(`${base_url}/category`, {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'auth-token': token\r\n            }\r\n        })\r\n            .then(response => response.json())\r\n            .then(jsonResponse => {\r\n                this.setState({\r\n                    categoryList: jsonResponse.message\r\n                });\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            })\r\n\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState){\r\n        if(this.state.categoryList !== nextState.categoryList){\r\n            return true\r\n        }\r\n    }\r\n\r\n    formatDate = (date) => {\r\n        let d = new Date(date);\r\n        return `${d.getDate()}/${d.getMonth() + 1}/${d.getFullYear()}`;\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n                <div class=\"container\">\r\n                        <h4>Available Categories</h4>\r\n                        <table className=\"table table-striped\">\r\n                            <thead class=\"thead-dark\">\r\n                            <tr>\r\n                                <th scope=\"col\">ID</th>\r\n                                <th scope=\"col\">Name</th>\r\n                                <th scope=\"col\">Keyword</th>\r\n                                <th scope=\"col\">Created Date</th>\r\n                                <th scope=\"col\">Sub Categories</th>\r\n                            </tr>\r\n                            </thead>\r\n                            {\r\n                                this.state.categoryList.map(categories => {\r\n                                    return(\r\n                                        <tbody>\r\n                                        <tr>\r\n                                            <td>{categories._id}</td>\r\n                                            <td>{categories.name}</td>\r\n                                            <td>{categories.slug}</td>\r\n                                            <td>{this.formatDate(categories.createdAt)}</td>\r\n                                            <td>{categories.children.map(sub =>{\r\n                                                return(<p>{sub.name}</p>)\r\n                                            })\r\n                                            }</td>\r\n                                        </tr>\r\n                                        </tbody>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </table>\r\n                </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        auth: state.auth\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getToken: () => dispatch(authActions.getToken())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CategoryTable);","import React from 'react';\r\nimport './success.styles.css';\r\n\r\nconst Success = props => <div className=\"success\">{props.children}</div>\r\n\r\nexport default Success","import React, { Component } from 'react';\r\nimport * as authActions from '../../../store/actions/authActions';\r\nimport { connect } from 'react-redux';\r\nimport { base_url } from '../../../constants';\r\nimport Header from \"../../../components/Header/Header\";\r\nimport CategoryTable from \"./categoryTable\";\r\nimport Error from \"../../../components/Message/Error/error\";\r\nimport Success from \"../../../components/Message/Success/succeess\";\r\n\r\nimport '../title.styles.css';\r\n\r\nclass AddCategory extends Component{\r\n\r\n    state = {\r\n        category: {\r\n            name: '',\r\n            slug: '',\r\n            parent: '',\r\n            createdBy:'',\r\n            isError: false,\r\n            errorMessage: '',\r\n            isSuccess:false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(!this.props.auth.isAuthenticated){\r\n            this.props.getToken()\r\n                .then(result => {\r\n                    if(result){\r\n                       let category = {...this.state.category}\r\n                       category.createdBy = this.props.auth.user.userId;\r\n                       this.setState({category});\r\n                    }\r\n\r\n                })\r\n                .catch(er => {\r\n                    console.log(er);\r\n                });\r\n        }\r\n    }\r\n\r\n    setError = (error, message,success) => {\r\n        const { category } = this.state;\r\n        const updatedCategoryForm = {\r\n            ...category,\r\n            isError: error,\r\n            errorMessage: message,\r\n            isSuccess: success\r\n        }\r\n        this.setState({\r\n            category: updatedCategoryForm\r\n        });\r\n    }\r\n\r\n    categorySubmitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const { category } = this.state;\r\n        if(category.name === ''){\r\n            this.setError(true, 'Enter Name',false); return;\r\n        }\r\n        if(category.slug === ''){\r\n            this.setError(true, 'Enter Keyword',false); return;\r\n        }\r\n\r\n        this.setError(false, 'Category added successfully',true);\r\n\r\n        fetch(`${base_url}/category`, {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'auth-token': this.props.auth.token\r\n            },\r\n            method: 'POST',\r\n            body: JSON.stringify(this.state.category)\r\n        })\r\n            .then(response => response.json())\r\n            .then(jsonResponse => {\r\n                console.log(jsonResponse);\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            })\r\n        this.forceUpdate();\r\n    }\r\n\r\n    inputHandler = (e) => {\r\n        const category = this.state.category;\r\n        const updatedCategory = {\r\n            ...category,\r\n            [e.target.name] :  e.target.value,\r\n            isError: false,\r\n            errorMessage: '',\r\n            isSuccess: false\r\n        };\r\n        this.setState({\r\n            category: updatedCategory\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const categoryForm = this.state;\r\n        let msg =  <Error>{this.state.category.errorMessage}</Error>;\r\n        if(this.state.category.isSuccess){\r\n            msg = <Success>{this.state.category.errorMessage}</Success>;\r\n        }\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <Header />\r\n                <br/>\r\n                <div class=\"container\">\r\n                    <p className=\"txt\">Category Management</p>\r\n                    <h4>Add New Category</h4>\r\n                    <form onSubmit={this.categorySubmitHandler}>\r\n                        <div className=\"row\">\r\n                            <div className=\"col\">\r\n                                <input type=\"text\" className=\"form-control\" name=\"name\" value={categoryForm.name} onChange={this.inputHandler} placeholder=\"Name\"/>\r\n                            </div>\r\n                            <div className=\"col\">\r\n                                <input type=\"text\" className=\"form-control\" name=\"slug\" value={categoryForm.slug} onChange={this.inputHandler} placeholder=\"Keyword\"/>\r\n                            </div>\r\n                            <div className=\"col\">\r\n                                <input type=\"text\" className=\"form-control\" name=\"parent\" value={categoryForm.parent} onChange={this.inputHandler} placeholder=\"ParentID(Optional)\"/>\r\n                            </div>\r\n                            <div className=\"col\">\r\n                                <button type=\"submit\" value=\"submit\" className=\"btn btn-dark btn-block\">Add</button>\r\n                            </div>\r\n                        </div>\r\n                        <br/>\r\n                        <div className=\"form-row\">\r\n                            <div className=\"form-group col-md-3\">\r\n                                {msg}\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <br/>\r\n                <CategoryTable/>\r\n\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        auth: state.auth\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getToken: () => dispatch(authActions.getToken())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddCategory);","import React, {Component} from \"react\";\r\nimport {base_url} from \"../../../constants\";\r\nimport * as authActions from \"../../../store/actions/authActions\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass ManagerTable extends Component{\r\n\r\n    state = {\r\n        managerList: []\r\n    }\r\n\r\n    componentDidMount(){\r\n        if(!this.props.auth.isAuthenticated){\r\n            this.props.getToken()\r\n                .then(result => {\r\n                    if(result){\r\n                        this.getManagers();\r\n                    }else{\r\n                        this.props.history.push('/login');\r\n                    }\r\n                })\r\n        }else{\r\n            this.getManagers();\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        this.getManagers()\r\n    }\r\n\r\n    getManagers = () => {\r\n        //const token =  this.props.auth.token;\r\n        fetch(`${base_url}/manager`, {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'auth-token': token\r\n            }\r\n        })\r\n            .then(response => response.json())\r\n            .then(jsonResponse => {\r\n                this.setState({\r\n                    managerList: jsonResponse.message\r\n                });\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    formatDate = (date) => {\r\n        let d = new Date(date);\r\n        return `${d.getDate()}/${d.getMonth() + 1}/${d.getFullYear()}`;\r\n    }\r\n\r\n    removeManager = (id) => {\r\n        fetch(`${base_url}/manager/delete/`+id, {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'auth-token': this.props.auth.token\r\n            },\r\n            method: 'DELETE',\r\n        })\r\n            .then(response => response.json())\r\n            .then(jsonResponse => {\r\n                console.log(jsonResponse);\r\n                this.getManagers();\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            })\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div class=\"container\">\r\n                <h4>Available Store Managers</h4>\r\n                <table className=\"table table-striped\">\r\n                    <thead class=\"thead-dark\">\r\n                    <tr>\r\n                        <th scope=\"col\">First Name</th>\r\n                        <th scope=\"col\">Last Name</th>\r\n                        <th scope=\"col\">Email</th>\r\n                        <th scope=\"col\">Created Date</th>\r\n                        <th scope=\"col\">Action</th>\r\n                    </tr>\r\n                    </thead>\r\n                    {\r\n                        this.state.managerList.map(manager => {\r\n                            return(\r\n                                <tbody>\r\n                                <tr>\r\n                                    <td>{manager.firstName}</td>\r\n                                    <td>{manager.lastName}</td>\r\n                                    <td>{manager.email}</td>\r\n                                    <td>{this.formatDate(manager.createdAt)}</td>\r\n                                    <td><button type=\"button\" onClick={()=>this.removeManager(manager._id)} className=\"btn btn-danger\"><i className=\"fa fa-trash\"/></button></td>\r\n                                </tr>\r\n                                </tbody>\r\n                            )\r\n                        })\r\n                    }\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        auth: state.auth\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getToken: () => dispatch(authActions.getToken())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ManagerTable);","import React, { Component } from 'react';\r\nimport * as authActions from '../../../store/actions/authActions';\r\nimport { connect } from 'react-redux';\r\nimport { base_url } from '../../../constants';\r\nimport Header from \"../../../components/Header/Header\";\r\nimport ManagerTable from \"./managerTable\";\r\nimport Error from \"../../../components/Message/Error/error\";\r\nimport Success from \"../../../components/Message/Success/succeess\";\r\n\r\nimport '../title.styles.css';\r\n\r\nclass AddManager extends Component{\r\n\r\n    state = {\r\n        manager: {\r\n            firstName: '',\r\n            lastName: '',\r\n            email: '',\r\n            password: '',\r\n            isError: false,\r\n            errorMessage: '',\r\n            isSuccess:false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(!this.props.auth.isAuthenticated){\r\n            this.props.getToken()\r\n                .then(result => {\r\n                    if(result){\r\n                        // let category = {...this.state.category}\r\n                        // category.createdBy = this.props.auth.user.userId;\r\n                        // this.setState({category});\r\n                    }\r\n\r\n                })\r\n                .catch(er => {\r\n                    console.log(er);\r\n                });\r\n        }\r\n    }\r\n\r\n\r\n    setError = (error, message,success) => {\r\n        const { manager } = this.state;\r\n        const updatedManagerForm = {\r\n            ...manager,\r\n            isError: error,\r\n            errorMessage: message,\r\n            isSuccess: success\r\n        }\r\n        this.setState({\r\n            manager: updatedManagerForm\r\n        });\r\n    }\r\n\r\n    managerSubmitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const { manager } = this.state;\r\n        if(manager.firstName === ''){\r\n            this.setError(true, 'Enter First Name',false); return;\r\n        }\r\n        if(manager.lastName === ''){\r\n            this.setError(true, 'Enter Last Name',false); return;\r\n        }\r\n        if(manager.email === ''){\r\n            this.setError(true, 'Enter Email',false); return;\r\n        }\r\n        if(manager.password === ''){\r\n            this.setError(true, 'Enter Password',false); return;\r\n        }\r\n\r\n        this.setError(false, 'Manager added successfully',true);\r\n\r\n        fetch(`${base_url}/manager/signup`, {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                //'auth-token': this.props.auth.token\r\n            },\r\n            method: 'POST',\r\n            body: JSON.stringify(this.state.manager)\r\n        })\r\n            .then(response => response.json())\r\n            .then(jsonResponse => {\r\n                console.log(jsonResponse);\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            })\r\n        this.forceUpdate();\r\n    }\r\n\r\n    inputHandler = (e) => {\r\n        const manager = this.state.manager;\r\n        const updatedManager = {\r\n            ...manager,\r\n            [e.target.name] :  e.target.value,\r\n            isError: false,\r\n            errorMessage: '',\r\n            isSuccess: false\r\n        };\r\n        this.setState({\r\n            manager: updatedManager\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        const managerForm = this.state;\r\n        let msg =  <Error>{this.state.manager.errorMessage}</Error>;\r\n        if(this.state.manager.isSuccess){\r\n            msg = <Success>{this.state.manager.errorMessage}</Success>;\r\n        }\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <Header />\r\n                <br/>\r\n                <div className=\"container\">\r\n                    <p className=\"txt\">Manager Management</p>\r\n                    <h4>Add New Store Manager</h4>\r\n                    <form onSubmit={this.managerSubmitHandler}>\r\n                        <div className=\"form-row\">\r\n                            <div className=\"form-group col-md-6\">\r\n                                <input type=\"text\" className=\"form-control\" name=\"firstName\" value={managerForm.firstName} onChange={this.inputHandler} placeholder=\"First Name\"/>\r\n                            </div>\r\n                            <div className=\"form-group col-md-6\">\r\n                                <input type=\"text\" className=\"form-control\" name=\"lastName\" value={managerForm.lastName} onChange={this.inputHandler} placeholder=\"Last Name\"/>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-row\">\r\n                            <div className=\"form-group col-md-6\">\r\n                                <input type=\"email\" className=\"form-control\" name=\"email\" value={managerForm.email} onChange={this.inputHandler} placeholder=\"Email\"/>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-row\">\r\n                            <div className=\"form-group col-md-6\">\r\n                                <input type=\"password\" className=\"form-control\" name=\"password\" value={managerForm.password} onChange={this.inputHandler} placeholder=\"Password\"/>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-row\">\r\n                            <div className=\"form-group col-md-6\">\r\n                                {msg}\r\n                            </div>\r\n                        </div>\r\n                        <button type=\"submit\" className=\"btn btn-dark\">Add Manager</button>\r\n                    </form>\r\n                </div>\r\n                <br/>\r\n                <ManagerTable/>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        auth: state.auth\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getToken: () => dispatch(authActions.getToken())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddManager);","import React, {Component} from \"react\";\r\nimport {base_url} from \"../../constants\";\r\nimport * as authActions from \"../../store/actions/authActions\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nclass ProductTable extends Component{\r\n\r\n    state = {\r\n        productList: [],\r\n    }\r\n\r\n    componentDidMount(){\r\n        if(!this.props.auth.isAuthenticated){\r\n            this.props.getToken()\r\n                .then(result => {\r\n                    if(result){\r\n                        this.getProducts();\r\n                    }else{\r\n                        this.props.history.push('/login');\r\n                    }\r\n                })\r\n        }else{\r\n            this.getProducts();\r\n        }\r\n    }\r\n\r\n    //------------------Get all available products--------------------\r\n    getProducts = () => {\r\n        console.log(this.props.auth.isAuthenticated)\r\n        //const token =  this.props.auth.token;\r\n        fetch(`${base_url}/products`, {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                //'auth-token': token\r\n            }\r\n        })\r\n            .then(response => response.json())\r\n            .then(jsonResponse => {\r\n                console.log(jsonResponse);\r\n                this.setState({\r\n                    productList: jsonResponse.message\r\n                });\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    formatDate = (date) => {\r\n        let d = new Date(date);\r\n        return `${d.getDate()}/${d.getMonth() + 1}/${d.getFullYear()}`;\r\n    }\r\n\r\n    //-----------------------Add discount to selected product--------------------\r\n    addDiscounts = (ProductId) => {\r\n\r\n        /*const discount = {\r\n            proID:ProductId,\r\n            offer:this.state.offer\r\n        }*/\r\n\r\n        const proID = ProductId;\r\n        const offer = this.state.offer;\r\n        console.log(proID+'--'+offer)\r\n        fetch(`${base_url}/products/update/offer`, {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'auth-token': this.props.auth.token\r\n            },\r\n\r\n            method: 'PUT',\r\n            body: {\r\n                _id:proID,\r\n                offer:offer\r\n            }\r\n        })\r\n            .then(response => response.json())\r\n            .then(jsonResponse => {\r\n                console.log(jsonResponse);\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            })\r\n\r\n    }\r\n\r\n    //---------------------Delete a selected product-------------------\r\n    //===============Refresh the browser after delete==================\r\n    removeProduct = (id) =>{\r\n        fetch(`${base_url}/products/delete/`+id, {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'auth-token': this.props.auth.token\r\n            },\r\n            method: 'DELETE',\r\n        })\r\n            .then(response => response.json())\r\n            .then(jsonResponse => {\r\n                console.log(jsonResponse);\r\n                this.getProducts();\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        /*if(this.state.removeProduct.isSuccess){\r\n            let msg = <success>{this.state.removeProduct.errorMessage}</success>;\r\n        }*/\r\n\r\n        return (\r\n            <div class=\"container\">\r\n                <h4>Available Products</h4>\r\n                <table className=\"table table-striped\">\r\n                    <thead class=\"thead-dark\">\r\n                    <tr>\r\n                        <th scope=\"col\">Name</th>\r\n                        <th scope=\"col\">Price</th>\r\n                        <th scope=\"col\">Discount</th>\r\n                        <th scope=\"col\">Created Date</th>\r\n                        <th scope=\"col\">Stock</th>\r\n                        <th scope=\"col\">Option</th>\r\n                        <th scope=\"col\">Action</th>\r\n                    </tr>\r\n                    </thead>\r\n                    {\r\n                        this.state.productList.map(product => {\r\n                            return(\r\n                                <tbody>\r\n                                <tr>\r\n                                    <td>{product.name}</td>\r\n                                    <td>{product.price}</td>\r\n                                    <td>{product.offer}</td>\r\n                                    <td>{this.formatDate(product.createdAt)}</td>\r\n                                    <td>{product.stock}</td>\r\n                                    <td><input type=\"text\" placeholder=\"Discount\" value={this.state.offer} />&nbsp;&nbsp;<button type=\"submit\" value=\"Submit\" className=\"btn btn-dark\" onClick={()=>{this.addDiscounts(product._id)}}>Add Discount</button></td>\r\n                                    <td><button type=\"submit\" value=\"Submit\" className=\"btn btn-dark\" onClick={()=>{this.removeProduct(product._id)}}>Delete</button></td>\r\n                                </tr>\r\n                                </tbody>\r\n                            )\r\n                        })\r\n                    }\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        auth: state.auth\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getToken: () => dispatch(authActions.getToken())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductTable);","import React, {Component} from 'react';\r\nimport * as productActions from '../../store/actions/productActions';\r\nimport  { connect } from 'react-redux';\r\nimport Error from \"../../components/Message/Error/error\";\r\nimport * as authActions from \"../../store/actions/authActions\";\r\nimport {base_url} from \"../../constants\";\r\nimport Header from \"../../components/Header/Header\";\r\nimport ProductTable from \"./productTable\";\r\nimport Success from \"../../components/Message/Success/succeess\";\r\n\r\n\r\nclass AddProducts extends Component {\r\n\r\n    state = {\r\n        product: {\r\n            name:'',\r\n            price:'',\r\n            stock:'',\r\n            description:'',\r\n            keyword:'',\r\n            category:'',\r\n            productPic:[],\r\n            createdBy:'',\r\n            isError: false,\r\n            errorMessage: '',\r\n            isSuccess:false\r\n        },\r\n        image:{\r\n            img:''\r\n        },\r\n        categoryList: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(!this.props.auth.isAuthenticated){\r\n            this.props.getToken()\r\n                .then(result => {\r\n                    if(result){\r\n                        this.getCategories();\r\n                        let product = {...this.state.product}\r\n                        product.createdBy = this.props.auth.user.userId;\r\n                        this.setState({product});\r\n                    }\r\n\r\n                })\r\n                .catch(er => {\r\n                    console.log(er);\r\n                });\r\n        }\r\n    }\r\n\r\n    //---------------Get all available categories in the store------------------\r\n    //================Refresh the browser to get categories=====================\r\n    getCategories = () => {\r\n        console.log(this.props.auth.isAuthenticated)\r\n        //const token =  this.props.auth.token;\r\n        fetch(`${base_url}/category`, {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                //'auth-token': token\r\n            }\r\n        })\r\n            .then(response => response.json())\r\n            .then(jsonResponse => {\r\n                console.log(jsonResponse);\r\n                this.setState({\r\n                    categoryList: jsonResponse.message\r\n                });\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    textHandler = (e) => {\r\n        const product = this.state.product;\r\n        const updatedProduct = {\r\n            ...product,\r\n            [e.target.name] : e.target.value,\r\n            isError: false,\r\n            errorMessage: '',\r\n            isSuccess: false\r\n        }\r\n        this.setState({\r\n            product: updatedProduct\r\n        })\r\n\r\n    }\r\n\r\n    selectBoxHandler = (e) =>{\r\n        let product = {...this.state.product}\r\n        product.category = e.target.value;\r\n        this.setState({product});\r\n    }\r\n\r\n    imageHandler = (e) =>{\r\n        const image = this.state.image;\r\n        const updatedImage = {\r\n            ...image,\r\n            [e.target.name] : e.target.value\r\n        }\r\n        this.setState({\r\n            image: updatedImage\r\n        })\r\n    }\r\n\r\n    setError = (error, message,success) => {\r\n        const { product } = this.state;\r\n        const updatedProduct = {\r\n            ...product,\r\n            isError: error,\r\n            errorMessage: message,\r\n            isSuccess: success\r\n        }\r\n        this.setState({\r\n            product: updatedProduct\r\n        });\r\n    }\r\n\r\n    addProductsHandler = (e) => {\r\n        e.preventDefault();\r\n        const { product } = this.state;\r\n        const { image } = this.state;\r\n\r\n        if(product.name === ''){\r\n            this.setError(true, 'Enter Product Name',false); return;\r\n        }\r\n\r\n        if(product.category === ''){\r\n            this.setError(true,'Select a Category',false); return;\r\n        }\r\n\r\n        if(image.img === ''){\r\n            this.setError(true,'Enter Image URL',false); return;\r\n        }\r\n\r\n        if(product.description === ''){\r\n            this.setError(true,'Enter Description',false); return;\r\n        }\r\n\r\n        if(product.price === ''){\r\n            this.setError(true,'Enter Price',false); return;\r\n        }\r\n\r\n        if(product.keyword === ''){\r\n            this.setError(true,'Enter Keyword',false); return;\r\n        }\r\n\r\n        if(product.stock === ''){\r\n            this.setError(true,'Enter Stock',false); return;\r\n        }\r\n\r\n        product.productPic.push(this.state.image);\r\n        this.setError(false,'Product added successfully',true);\r\n        fetch(`${base_url}/products/create`, {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'auth-token': this.props.auth.token\r\n            },\r\n            method: 'POST',\r\n            body: JSON.stringify(this.state.product)\r\n        })\r\n            .then(response => response.json())\r\n            .then(jsonResponse => {\r\n                console.log(jsonResponse);\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            })\r\n\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n        const {product,image}  = this.state;\r\n        let msg =  <Error>{this.state.product.errorMessage}</Error>;\r\n        if(this.state.product.isSuccess){\r\n            msg = <Success>{this.state.product.errorMessage}</Success>;\r\n        }\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <Header/>\r\n                <br/>\r\n                <div className=\"container\">\r\n                    <p className=\"txt\">Products Management</p>\r\n                    <h4>Add New Product</h4>\r\n                    <form onSubmit={this.addProductsHandler} >\r\n                        <div className=\"form-row\">\r\n                            <div className=\"form-group col-md-6\">\r\n                                <label htmlFor=\"inputAddress\">Product Name</label>\r\n                                <input type=\"text\" className=\"form-control\"  name=\"name\" placeholder=\"Product Name\" value={product.name} onChange={this.textHandler} />\r\n                            </div>\r\n                            <div className=\"form-group col-md-6\">\r\n                                <label htmlFor=\"inputState\">Select Category</label>\r\n\r\n                                <select id=\"inputState\" className=\"form-control\" value={product.category} onChange={this.selectBoxHandler} >\r\n                                    {\r\n                                        this.state.categoryList.map(categories =>{\r\n                                            return(\r\n                                                categories.children.map(sub =>{\r\n                                                    return (\r\n                                                        <option value={sub._id} key={sub._id}>{sub.name}</option>\r\n                                                    )\r\n                                                })\r\n                                            )\r\n\r\n                                        })\r\n                                    }\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-row\">\r\n                            <div className=\"form-group col-md-12\">\r\n                                <label htmlFor=\"inputAddress\">Description</label>\r\n                                <textarea type=\"text\" className=\"form-control\"  name=\"description\" placeholder=\"Description\" value={product.description} onChange={this.textHandler} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-row\">\r\n                            <div className=\"form-group col-md-6\">\r\n                                <label htmlFor=\"inputAddress\">Price</label>\r\n                                <input type=\"number\" className=\"form-control\"  name=\"price\" placeholder=\"Price\" value={product.price} onChange={this.textHandler} />\r\n                            </div>\r\n                            <div className=\"form-group col-md-6\">\r\n                                <label htmlFor=\"inputAddress\">Image</label>\r\n                                <input type=\"text\" className=\"form-control\"  name=\"img\" placeholder=\"Image URL\" value={image.img} onChange={this.imageHandler} />\r\n                            </div>\r\n                        </div >\r\n                        <div className=\"form-row\">\r\n                            <div className=\"form-group col-md-6\">\r\n                                <label htmlFor=\"inputAddress\">Stock</label>\r\n                                <input type=\"number\" className=\"form-control\"  name=\"stock\" placeholder=\"Stock\" value={product.stock} onChange={this.textHandler} />\r\n                            </div>\r\n                            <div className=\"form-group col-md-6\">\r\n                                <label htmlFor=\"inputAddress\">Keyword</label>\r\n                                <input type=\"text\" className=\"form-control\"  name=\"keyword\" placeholder=\"Keyword\" value={product.keyword} onChange={this.textHandler} />\r\n                            </div>\r\n                        </div>\r\n                        {msg}\r\n                        <div className=\"form-group \">\r\n                            <button type=\"submit\" value=\"Submit\" className=\"btn btn-dark\">ADD</button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n                <br/>\r\n                <ProductTable/>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        addProducts: (product) => dispatch(productActions.addProducts(product)),\r\n        getToken: () => dispatch(authActions.getToken())\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        auth: state.auth\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps) (AddProducts);","import { AUTHENTICATE_USER, LOGOUT_USER } from \"../actions/authActions\";\r\n\r\nconst initState = {\r\n    isAuthenticated: false,\r\n    user: {},\r\n    token: ''\r\n}\r\n\r\nconst authReducers = (state = initState, action) => {\r\n    switch(action.type){\r\n        case AUTHENTICATE_USER:\r\n            state = {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                user: action.auth.user,\r\n                token: action.auth.token\r\n            }\r\n            break;\r\n        case LOGOUT_USER:\r\n            state = {\r\n                isAuthenticated: false,\r\n                user: {},\r\n                token: ''\r\n            }\r\n            break;\r\n        default:\r\n            return state;\r\n    }\r\n    return state;\r\n}\r\n\r\nexport default authReducers;","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nconst PrivateRoute = ({component: Component, ...rest}) => (\r\n    <Route {...rest} render={(props) => {\r\n        const authData = window.localStorage.getItem('auth');\r\n        if(authData){\r\n            const auth = JSON.parse(authData);\r\n            if(auth.hasOwnProperty('token') && auth.token !== ''){\r\n                return <Component {...props} />\r\n            }else{\r\n                return <Redirect to=\"/login\" />\r\n            }\r\n        }else{\r\n            return <Redirect to=\"/login\" />\r\n        }\r\n\r\n\r\n    }} />\r\n)\r\n\r\nexport default PrivateRoute;","import { GET_PRODUCTS, GET_PRODUCT_CATEGORIES } from \"../actions/productActions\";\r\n\r\nconst initState = {\r\n    products: [],\r\n    categories: []\r\n}\r\n\r\nconst productReducers = (state = initState, actions) => {\r\n    switch(actions.type){\r\n        case GET_PRODUCTS:\r\n            state = {\r\n                ...state,\r\n                products: actions.products\r\n            }\r\n            break;\r\n        case GET_PRODUCT_CATEGORIES:\r\n            state = {\r\n                ...state,\r\n                categories: actions.categories\r\n            }\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n    return state;\r\n\r\n}\r\n\r\nexport default productReducers;","import React, { Component } from 'react';\r\nimport Header from '../../components/Header/Header';\r\nimport { connect } from 'react-redux';\r\nimport * as cartActions from '../../store/actions/cartActions';\r\nimport * as authActions from '../../store/actions/authActions';\r\nimport './productdetails.styles.css';\r\nimport { base_url } from '../../constants';\r\nimport StarRatingComponent from 'react-star-rating-component';\r\n\r\nclass ProductDetails extends Component{\r\n\r\n    state = {\r\n        product: null,\r\n        redirectToReferrer: false,\r\n        review:'',\r\n        rating:0\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        if(!this.props.auth.isAuthenticated){\r\n            this.props.getToken()\r\n                .then(result => {\r\n                    if(result){\r\n                        this.props.getCartItems(this.props.auth.token, this.props.auth.user.userId)\r\n                            .then(response => {\r\n                                console.log(response);\r\n                            })\r\n                            .catch(error => {\r\n                                console.log(error);\r\n                            })\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    console.log(error);\r\n                })\r\n        }\r\n\r\n        const { category, slug } = this.props.match.params;\r\n        fetch(`${base_url}/products/${category}/${slug}`)\r\n            .then(response => response.json())\r\n            .then(jsonResponse => {\r\n\r\n                if(jsonResponse.hasOwnProperty('message')){\r\n                    console.log(jsonResponse);\r\n                    this.setState({\r\n                        product: jsonResponse.message\r\n                    })\r\n                }\r\n\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    addToCart = (productId, price, name, image) => {\r\n\r\n        if(!this.props.auth.isAuthenticated){\r\n            this.props.history.push('/login');\r\n            return;\r\n        }\r\n\r\n        const { auth } = this.props;\r\n        const cartItem = {\r\n            user: auth.user.userId,\r\n            product: productId,\r\n            name: name,\r\n            image: image,\r\n            quantity: 1,\r\n            price: price\r\n        }\r\n\r\n        this.props.addToCart(auth.token, cartItem)\r\n            .then(response => {\r\n                console.log(this.props.cart);\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    addReview = (productId) =>{\r\n\r\n        if(!this.props.auth.isAuthenticated){\r\n            this.props.history.push('/login');\r\n            return;\r\n        }\r\n\r\n        const reviews ={\r\n            review: this.state.review,\r\n            rating:this.state.rating,\r\n            name:this.props.auth.user.firstName+' '+this.props.auth.user.lastName,\r\n            userId:this.props.auth.user.userId,\r\n            productId:productId\r\n        }\r\n\r\n        fetch(`${base_url}/products/addReview`, {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'auth-token': this.props.auth.token\r\n            },\r\n            method: 'PUT',\r\n            body: JSON.stringify(reviews)\r\n        })\r\n            .then(response => response.json())\r\n            .then(jsonResponse => {\r\n                console.log(jsonResponse);\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    textHandler = (e) =>{\r\n        this.setState({\r\n            review:e.target.value\r\n        });\r\n    }\r\n\r\n    formatDate = (date) => {\r\n        let d = new Date(date);\r\n        return `${d.getDate()}/${d.getMonth() + 1}/${d.getFullYear()}`;\r\n    }\r\n\r\n    onStarClick(nextValue, prevValue, name) {\r\n        this.setState({rating: nextValue});\r\n    }\r\n\r\n    render(){\r\n\r\n        const { product } = this.state;\r\n\r\n        let productDescription;\r\n\r\n        if(this.state.product){\r\n            productDescription =\r\n                <div className=\"Content\">\r\n                    <div className=\"ProductDetailsWrapper\">\r\n                        <div className=\"ProductDetailsImage\">\r\n                            <div className=\"ProductDetailsImageWrapper\">\r\n                                <img src={product.productPic[0].img} alt=\"\" />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"ProductDetails\">\r\n                            <div className=\"row\">\r\n                            <h2 >{product.name}</h2>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <h1><i className=\"fa fa-usd\" aria-hidden=\"true\"/> {product.price}</h1>\r\n                                &nbsp; &nbsp;\r\n                                <h2 className=\"text-success\">{product.offer}% off</h2>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <StarRatingComponent\r\n                                    name=\"rating\"\r\n                                    starCount={5}\r\n                                    editing={false}\r\n                                    value={product.rating}\r\n                                    renderStarIcon={()=> <i className=\"fa fa-star fa-lg\" aria-hidden=\"true\"/>}/>\r\n                                &nbsp; &nbsp;\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <p><i className=\"text-success fa fa-check-square-o\" aria-hidden=\"true\"/> <strong>Bank\r\n                                    Offer</strong> 20% Instant Discount on Visa Credit Cards</p>\r\n                                <p><i className=\"text-success fa fa-check-square-o\" aria-hidden=\"true\"/> <strong>Bank\r\n                                    Offer</strong> 5% Unlimited Cashback on BOC Credit Cards </p>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <h3 className=\"text-info\"><i className=\"fa fa-map-marker\" aria-hidden=\"true\"/></h3>\r\n                                <p> &nbsp; Delivery | &nbsp;<span>FREE</span></p>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"ProductDescription\">\r\n                                    <h5>Product Description</h5>\r\n                                    <p>{product.description}</p>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row ActionButtonWrapper\">\r\n                                <button onClick={() => { this.addToCart(product._id, product.price, product.name, product.productPic[0].img) }}><i className=\"fa fa-shopping-cart\"></i>&nbsp;ADD TO CART</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"container mt-5 mb-5\">\r\n                        <div className=\"row\">\r\n                            <h3>Ratings & Reviews</h3>\r\n                        </div>\r\n                        {product.reviews.map(r =>{\r\n                            return(\r\n                                <div className=\"row mt-5 mb-5\">\r\n                                    <div className=\"media\">\r\n                                        <div className=\"mr-3\">\r\n                                            <i className=\"fa fa-user-o fa-3x\" />\r\n                                        </div>\r\n                                        <div className=\"media-body\">\r\n                                            <h5 className=\"mt-0\">{r.name} - {this.formatDate(r.createdAt)}</h5>\r\n                                            <StarRatingComponent\r\n                                                name=\"rating\"\r\n                                                starCount={5}\r\n                                                editing={false}\r\n                                                value={r.rating}\r\n                                                renderStarIcon={()=> <i className=\"fa fa-star fa-lg\" aria-hidden=\"true\"/>}/>\r\n                                            <p>{r.review}</p>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        })\r\n                        }\r\n                        <div className=\"row mb-5\">\r\n                            <h3> Post Your Own Reviews</h3>\r\n                        </div>\r\n                        <form>\r\n                            <label htmlFor=\"exampleInputPassword1\">Rate</label>\r\n                            <div className=\"form-group\">\r\n                                <StarRatingComponent\r\n                                    name=\"rating\"\r\n                                    starCount={5}\r\n                                    value={this.state.rating}\r\n                                    onStarClick={this.onStarClick.bind(this)}\r\n                                    renderStarIcon={()=> <i className=\"fa fa-star fa-lg\" aria-hidden=\"true\"/>}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"exampleInputPassword1\">Review</label>\r\n                                <textarea type=\"text\" className=\"form-control\" id=\"exampleInputtextarea\"\r\n                                          placeholder=\"write your own reviews\" rows=\"3\" value={this.state.review} onChange={this.textHandler}/>\r\n                            </div>\r\n                            <button onClick={()=>{this.addReview(product._id)}} type=\"submit\" className=\"btn btn-dark\">Submit</button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n\r\n        }else{\r\n            productDescription = <div>Product is loading...!</div>\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <Header/>\r\n                <br/>\r\n                {productDescription}\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        auth: state.auth,\r\n        cart: state.cart\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        addToCart: (token, cartItem) => dispatch(cartActions.addToCart(token, cartItem)),\r\n        getCartItems: (token, userId) => dispatch(cartActions.getCartItems(token, userId)),\r\n        getToken: () => dispatch(authActions.getToken())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductDetails);","import React from 'react';\r\nimport './quantitycontrol.styles.css';\r\n\r\nconst QuantityControl = props => {\r\n    return (\r\n        <div className=\"QunantityControl\">\r\n            <button onClick={(e) => props.decreaseQuantity(e, props.productId)}>-</button>\r\n            <input\r\n                type=\"text\"\r\n                onChange={(e) => props.changeQuantity(e, props.productId)}\r\n                name={props.name}\r\n                value={props.quantity}\r\n            />\r\n            <button onClick={(e) => props.increaseQuantity(e, props.productId)}>+</button>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default QuantityControl;","import React from 'react';\r\nimport QuantityControl from '../../../components/QuantityControl/quantityControl';\r\n\r\nimport './cartitem.styles.css';\r\n\r\n\r\nconst CartItem = props => {\r\n\r\n    return (\r\n        <div className=\"SingleItem\">\r\n            <div className=\"ItemWrapper\">\r\n                <div className=\"ItemImage\" style={{width: '80px', height: '80px', overflow: 'hidden', position: 'relative'}}>\r\n                    <img style={{maxWidth: '100%', maxHeight: '100%', position: 'absolute', left: '50%', transform: 'translateX(-50%)'}} src={props.image} alt=\"\" />\r\n                </div>\r\n                <div className=\"ItemDetails\">\r\n                    <p className=\"ItemName\">{props.name}</p>\r\n                    <p className=\"ItemPrice\">${props.total}</p>\r\n                </div>\r\n            </div>\r\n            <div className=\"CartActionButtons\">\r\n                <QuantityControl\r\n                    productId={props.productId}\r\n                    name={props.name}\r\n                    quantity={props.quantity}\r\n                    changeQuantity={props.changeQuantity}\r\n                    increaseQuantity={props.increaseQuantity}\r\n                    decreaseQuantity={props.decreaseQuantity}\r\n                />\r\n                 <button onClick={props.removeItem} className=\"btn btn-dark btn-sm\"  >REMOVE</button>\r\n                {/*<button className=\"btn btn-dark btn-sm\" onClick={clearCart()} >REMOVE</button>*/}\r\n\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CartItem;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport './cartprice.styles.css';\r\n\r\nconst CartPrice = props => {\r\n\r\n    return (\r\n        <div className=\"PriceWrapper\">\r\n            {/* show price */}\r\n            <div className=\"price-title\">\r\n                <h4>Price Details</h4>\r\n            </div>\r\n            <div className=\"CardBody\">\r\n                <div className=\"FinalBilling\">\r\n                    <div className=\"Row\">\r\n                        <p>Price ({props.cart.cartCount})</p>\r\n                        <p>${props.cart.totalAmount}</p>\r\n                    </div>\r\n                    <div className=\"Row\">\r\n                        <p>Delivery</p>\r\n                        <p>$0</p>\r\n                    </div>\r\n                    <hr />\r\n                    <div className=\"Row\">\r\n                        <h4>Total Amount</h4>\r\n                        <h4>${props.cart.totalAmount}</h4>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        cart: state.cart\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(CartPrice);","import React, { Component } from 'react';\r\nimport Header from '../../components/Header/Header';\r\nimport CartItem from './CartItem/cartItem';\r\nimport * as cartActions from '../../store/actions/cartActions';\r\nimport * as authActions from '../../store/actions/authActions';\r\nimport { connect } from 'react-redux';\r\nimport CartPrice from '../../components/CartPrice/cartPrice';\r\nimport {base_url} from \"../../constants/index\";\r\n\r\nimport './cart.styles.css';\r\n\r\n\r\nclass Cart extends Component{\r\n\r\n    state = {\r\n        cartItems: []\r\n    }\r\n\r\n    decreaseQuantity = (e, productId) => {\r\n        this.updateCart(productId, -1);\r\n    }\r\n\r\n    increaseQuantity = (e, productId) => {\r\n        this.updateCart(productId, 1);\r\n    }\r\n\r\n    updateCart = async (productId, quantity) => {\r\n        try{\r\n            const auth = this.props.auth;\r\n            let product = this.state.cartItems.find(item => item.product === productId);\r\n            product = {\r\n                productId: product.product,\r\n                quantity: parseInt(product.quantity) + parseInt(quantity),\r\n                newQuantity: quantity,\r\n                price: product.price,\r\n                total: parseFloat(product.total) + parseFloat( product.price * quantity )\r\n            }\r\n            if(product.quantity <= 0){\r\n                return;\r\n            }\r\n            const response = await this.props.updateCart(auth.token, auth.user.userId, product);\r\n            if(response.ok === 1){\r\n                const {cartItems} = this.state;\r\n                this.setState({\r\n                    cartItems: cartItems.map(item => item.product === productId ?\r\n                        {...item, quantity: item.quantity + quantity, total: item.total + (item.price * quantity)}: item)\r\n                })\r\n            }\r\n        }catch(error){\r\n            console.log(error);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    clearCart = (id) =>{\r\n        const userId = this.props.auth.user.userId;\r\n\r\n        fetch(`${base_url}/cart/delete/${userId}/${id}`, {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'auth-token': this.props.auth.token\r\n            },\r\n            method: 'PUT',\r\n        })\r\n            .then(response => response.json())\r\n            .then(jsonResponse => {\r\n                console.log(jsonResponse);\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            })\r\n        window.location.reload(false);\r\n    }\r\n\r\n    changeQuantity = (e, productId) => {\r\n\r\n        // console.log(e.target.value);\r\n\r\n        // if(isNaN(e.target.value)){\r\n        //     return;\r\n        // }\r\n\r\n        // const firstDigit = parseInt(e.target.value.split(\"\")[0]);\r\n        // if(firstDigit === 0){\r\n        //     return;\r\n        // }\r\n\r\n        // //alert(e.target.value);\r\n\r\n        // this.updateCart(productId, parseInt(e.target.value));\r\n    }\r\n\r\n    componentDidMount() {\r\n       this.getItems()\r\n    }\r\n\r\n    getItems = () =>{\r\n        if(!this.props.auth.isAuthenticated){\r\n            this.props.getToken()\r\n                .then(result => {\r\n                    if(result){\r\n                        const cartItems = this.props.getCartItems(this.props.auth.token, this.props.auth.user.userId);\r\n                        return cartItems;\r\n                    }\r\n                    return [];\r\n                })\r\n                .then(cartItems => {\r\n                    if(cartItems.cart.length > 0){\r\n                        this.setState({\r\n                            cartItems: this.props.cart.cartItem\r\n                        })\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    console.log(error);\r\n                })\r\n        }else{\r\n            this.setState({\r\n                cartItems: this.props.cart.cartItem\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    render (){\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <Header />\r\n                <div className=\"Content\">\r\n                    <div className=\"CartWrapper\">\r\n                        <div className=\"CartDetails\">\r\n                            {/* List cart items */}\r\n                            <div className=\"CardTitle\">\r\n                                <h4>My Cart</h4>\r\n                            </div>\r\n                            <div className=\"CardBody\">\r\n                                {\r\n                                    this.state.cartItems.map(product =>\r\n                                        <CartItem\r\n                                            key={product.product}\r\n                                            productId={product.product}\r\n                                            name={product.name}\r\n                                            image={product.image}\r\n                                            price={product.price}\r\n                                            quantity={product.quantity}\r\n                                            total={product.total}\r\n                                            //name=\"quantity\"\r\n                                            changeQuantity={this.changeQuantity}\r\n                                            increaseQuantity={this.increaseQuantity}\r\n                                            decreaseQuantity={this.decreaseQuantity}\r\n                                            removeItem={()=>this.clearCart(product.product)}\r\n                                        />\r\n                                        )\r\n                                }\r\n                                <div className=\"PlaceOrder\">\r\n                                    <button className=\"PlaceOrderButton\" onClick={() => this.props.history.push('/place-order')}>Place Order</button>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                        <CartPrice />\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        auth: state.auth,\r\n        cart: state.cart\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getCartItems: (token, userId) => dispatch(cartActions.getCartItems(token, userId)),\r\n        updateCart: (token, userId, product) => dispatch(cartActions.updateCart(token, userId, product)),\r\n        getToken: () => dispatch(authActions.getToken())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Cart);","import { ADD_TO_CART, GET_CART_DETAILS, UPDATE_CART, CLEAR_CART } from \"../actions/cartActions\"\r\n\r\nconst initState = {\r\n    cartItem: [],\r\n    totalAmount: 0,\r\n    cartCount: 0\r\n}\r\n\r\nconst cartReducers = (state = initState, actions) => {\r\n    switch(actions.type){\r\n        case ADD_TO_CART:\r\n            const cartItem = state.cartItem;\r\n            let updatedCartItem = [];\r\n            let totalAmount;\r\n\r\n            const itemCount = state.cartItem.filter(item => item.product === actions.cartItem.product);\r\n\r\n            if(itemCount.length === 0){\r\n                updatedCartItem = [\r\n                    ...cartItem,\r\n                    {\r\n                        product: actions.cartItem.product,\r\n                        name: actions.cartItem.name,\r\n                        image: actions.cartItem.image,\r\n                        price: actions.cartItem.price,\r\n                        quantity: actions.cartItem.quantity,\r\n                        total: actions.cartItem.quantity * actions.cartItem.price\r\n                    }\r\n                ];\r\n            }else{\r\n                updatedCartItem = cartItem.map(item =>\r\n                    item.product === actions.cartItem.product ?\r\n                        {\r\n                            ...item,\r\n                            quantity: item.quantity + actions.cartItem.quantity,\r\n                            total: item.total + actions.cartItem.price\r\n                        } : item\r\n                )\r\n            }\r\n            totalAmount = state.totalAmount + actions.cartItem.price\r\n            state = {\r\n                cartItem: updatedCartItem,\r\n                totalAmount: totalAmount,\r\n                cartCount: state.cartCount + 1\r\n            }\r\n            break;\r\n        case GET_CART_DETAILS:\r\n            const cItem = actions.cartItems.cart;\r\n            let totalAmt = 0;\r\n            let quantityCount = 0;\r\n            const updateCartItem = cItem.map(item => {\r\n                totalAmt += item.total;\r\n                quantityCount += item.quantity;\r\n                return {\r\n                    product: item.product._id,\r\n                    name: item.product.name,\r\n                    image: item.product.productPic[0].img,\r\n                    price: item.price,\r\n                    quantity: item.quantity,\r\n                    total: item.total\r\n                }\r\n            })\r\n            state = {\r\n                cartItem: updateCartItem,\r\n                totalAmount: totalAmt,\r\n                cartCount: quantityCount\r\n            }\r\n            break;\r\n        case UPDATE_CART:\r\n            const updateItem = actions.item;\r\n            const cartItems = state.cartItem.map(item => {\r\n                return item.product === updateItem.productId ?\r\n                    {\r\n                        ...item,\r\n                        quantity: updateItem.quantity,\r\n                        total: updateItem.total\r\n                    } : item\r\n            });\r\n            state = {\r\n                cartItem: cartItems,\r\n                totalAmount: parseFloat(state.totalAmount) + parseFloat(updateItem.price * updateItem.newQuantity),\r\n                cartCount: parseInt(state.cartCount) + parseInt(updateItem.newQuantity)\r\n            }\r\n            break;\r\n        case CLEAR_CART:\r\n\r\n            state = {\r\n                cartItem: [],\r\n                totalAmount: 0,\r\n                cartCount: 0\r\n            }\r\n            break;\r\n       \r\n        default:\r\n            break;\r\n    }\r\n\r\n    return state;\r\n}\r\n\r\nexport default cartReducers;","import React from 'react';\r\nimport './normalinput.styles.css';\r\n\r\nconst NormalInput = props => {\r\n\r\n    let input;\r\n    switch(props.type){\r\n        case 'text':\r\n            input = <input\r\n                type={props.type}\r\n                name={props.name}\r\n                className=\"NormalInput\"\r\n                placeholder={props.placeholder}\r\n                value={props.value}\r\n                onChange={props.inputHandler} />\r\n            break;\r\n        case 'textarea':\r\n            input = <textarea\r\n                type={props.type}\r\n                name={props.name}\r\n                className=\"NormalInput\"\r\n                placeholder={props.placeholder}\r\n                value={props.value}\r\n                onChange={props.inputHandler} />\r\n            break;\r\n        case 'select':\r\n            input = <select>\r\n                <option>---Select---</option>\r\n            </select>\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n    return input;\r\n}\r\n\r\nexport default NormalInput;","import React from 'react';\r\nimport NormalInput from '../../../components/NormalInput/NormalInput';\r\n\r\n\r\nconst AddressForm = props =>  {\r\n\r\n    const {address} = props;\r\n\r\n    return (\r\n        <form onSubmit={props.addressSubmitHandler}>\r\n            <div className=\"Row\">\r\n                <div style={{width: '49%'}}>\r\n                    <NormalInput\r\n                        name=\"fullName\"\r\n                        value={address.fullName}\r\n                        placeholder={'Full Name'}\r\n                        inputHandler={props.inputHandler}\r\n                        type=\"text\"\r\n                    />\r\n                </div>\r\n                <div style={{width: '49%'}}>\r\n                    <NormalInput\r\n                        name=\"mobileNumber\"\r\n                        value={address.mobileNumber}\r\n                        placeholder={'10-digit Mobile Number'}\r\n                        inputHandler={props.inputHandler}\r\n                        type=\"text\"\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className=\"Row\">\r\n                <div style={{width: '49%'}}>\r\n                    <NormalInput\r\n                        name=\"pinCode\"\r\n                        value={address.pinCode}\r\n                        placeholder={'Pincode'}\r\n                        inputHandler={props.inputHandler}\r\n                        type=\"text\"\r\n                    />\r\n                </div>\r\n                <div style={{width: '49%'}}>\r\n                    <NormalInput\r\n                        name=\"locality\"\r\n                        value={address.locality}\r\n                        placeholder={'Locality'}\r\n                        inputHandler={props.inputHandler}\r\n                        type=\"text\"\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"Row\">\r\n                <NormalInput\r\n                    name=\"address\"\r\n                    value={address.address}\r\n                    placeholder={'Address (Area and Street)'}\r\n                    inputHandler={props.inputHandler}\r\n                    type=\"textarea\"\r\n                    style={{height: '60px'}}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"Row\">\r\n                <div style={{width: '49%'}}>\r\n                    <NormalInput\r\n                        name=\"cityDistrictTown\"\r\n                        value={address.cityDistrictTown}\r\n                        placeholder={'City/District/Town'}\r\n                        inputHandler={props.inputHandler}\r\n                        type=\"text\"\r\n                    />\r\n                </div>\r\n                <div style={{width: '49%'}}>\r\n                    <NormalInput\r\n                        name=\"state\"\r\n                        value={address.state}\r\n                        placeholder={'State'}\r\n                        inputHandler={props.inputHandler}\r\n                        type=\"text\"\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"Row\">\r\n                <div style={{width: '49%'}}>\r\n                    <NormalInput\r\n                        name=\"landmark\"\r\n                        value={address.landmark}\r\n                        placeholder={'Landmark (Optional)'}\r\n                        inputHandler={props.inputHandler}\r\n                        type=\"text\"\r\n                    />\r\n                </div>\r\n                <div style={{width: '49%'}}>\r\n                    <NormalInput\r\n                        name=\"alternatePhoneNumber\"\r\n                        value={address.alternateNumber}\r\n                        placeholder={'Alternate Phone (Optional)'}\r\n                        inputHandler={props.inputHandler}\r\n                        type=\"text\"\r\n\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"Row\">\r\n                <button className=\"DeliveryAddressButton\">SAVE AND DELIVER HERE</button>\r\n            </div>\r\n\r\n        </form>\r\n\r\n    );\r\n\r\n\r\n}\r\n\r\nexport default AddressForm;","import React from 'react';\r\nimport './radiobutton.styles.css';\r\n\r\nconst RadioButton = props => {\r\n    return (\r\n        <label className=\"RadioButton\">\r\n            {props.label}\r\n            <input onChange={props.onChange} type=\"radio\" name={props.name} value={props.value} />\r\n            <span className=\"Checkmark\"></span>\r\n        </label>\r\n    );\r\n\r\n}\r\n\r\nexport default RadioButton;","import React from 'react';\r\nimport './deliveryaddress.css';\r\nimport RadioButton from '../../../components/RadioButton/RadioButton';\r\n\r\nconst DeliveryAddress = props => {\r\n\r\n    const {address} = props;\r\n\r\n    return (\r\n        <div style={{margin: '10px 0'}}>\r\n            <div className=\"AddressSelection\" key={address._id}>\r\n                <RadioButton\r\n                    name=\"address\"\r\n                    label=\"\"\r\n                    value={address._id}\r\n                    onChange={props.onAddressSelection}\r\n                />\r\n                <div>\r\n                    <p className=\"AddressAuthor\">{address.fullName} {address.mobileNumber}</p>\r\n                    <p className=\"AuthorAddress\">{address.address}, {address.cityDistrictTown}, {address.state} - {address.pinCode}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DeliveryAddress;","import React, { Component } from 'react';\r\nimport Header from '../../components/Header/Header';\r\nimport './placeorder.styles.css';\r\nimport * as authActions from '../../store/actions/authActions';\r\nimport { connect } from 'react-redux';\r\nimport AddressForm from './AddressForm/AddressForm';\r\nimport CartPrice from '../../components/CartPrice/cartPrice';\r\nimport DeliveryAddress from './DeliveryAddress/deliveryAddress';\r\nimport RadioButton from '../../components/RadioButton/RadioButton';\r\nimport * as cartActions from '../../store/actions/cartActions';\r\n\r\nimport { base_url } from '../../constants';\r\n\r\nclass PlaceOrder extends Component{\r\n\r\n    state = {\r\n        addresses: [],\r\n        address: {\r\n            fullName: \"\",\r\n            mobileNumber: \"\",\r\n            pinCode: \"\",\r\n            locality: \"\",\r\n            address: \"\",\r\n            cityDistrictTown: \"\",\r\n            state: \"\",\r\n            landmark: \"\",\r\n            alternatePhoneNumber: \"\"\r\n        },\r\n        order: [],\r\n        selectedAddress: '',\r\n        existingAddress: false,\r\n        newAddress: false,\r\n        isAddressConfirm: false,\r\n        isOrderConfirm: false,\r\n        selectedPaymentType: 'cod',\r\n        paymentTypes: [\r\n            {id: 1, value: 'card', label: 'Credit Card / Debit Card / ATM Card', isActive: false},\r\n            {id: 2, value: 'netBanking', label: 'Net Banking', isActive: false},\r\n            {id: 3, value: 'paypal', label: 'Paypal', isActive: false},\r\n            {id: 4, value: 'cod', label: 'Cash on Delivery', isActive: true},\r\n        ]\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(!this.props.auth.isAuthenticated){\r\n            this.props.getToken()\r\n                .then(result => {\r\n                    if(result){\r\n\r\n                        this.getAddresses();\r\n\r\n                    }else{\r\n                        this.props.history.push('/login');\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    console.log(error);\r\n                })\r\n        }else{\r\n            this.getAddresses();\r\n        }\r\n    }\r\n\r\n    getAddresses = () => {\r\n        const userId = this.props.auth.user.userId;\r\n        fetch(`${base_url}/user/get-addresses/`+userId, {\r\n            headers: {\r\n                'auth-token': this.props.auth.token\r\n            }\r\n        })\r\n            .then(response => {\r\n                if(response.status === 200){\r\n                    return response.json();\r\n                }else{\r\n                    throw new Error('Something went wrong');\r\n                }\r\n            })\r\n            .then(jsonResponse => {\r\n                console.log(jsonResponse)\r\n                this.setState({\r\n                    addresses: jsonResponse.message.address\r\n                })\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    inputHandler = (e) => {\r\n        const address = this.state.address;\r\n        const updatedAddress = {\r\n            ...address,\r\n            [e.target.name] :  e.target.value\r\n        };\r\n        this.setState({\r\n            address: updatedAddress\r\n        })\r\n    }\r\n\r\n    addressSelector = (e) => {\r\n\r\n        this.setState({\r\n            selectedAddress: e.target.value,\r\n            existingAddress: true,\r\n            newAddress: false\r\n        });\r\n\r\n    }\r\n\r\n    newAddressSelection = (e) => {\r\n        this.setState({\r\n            selectedAddress: 'newAddressId',\r\n            existingAddress: false,\r\n            newAddress: true\r\n        });\r\n    }\r\n\r\n    addressSubmitHandler = (e) => {\r\n        e.preventDefault();\r\n        console.log(this.state.address)\r\n\r\n        const address = {\r\n            userId: this.props.auth.user.userId,\r\n            address: this.state.address\r\n        }\r\n\r\n        fetch(`${base_url}/user/new-address`, {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'auth-token': this.props.auth.token\r\n            },\r\n            method: 'POST',\r\n            body: JSON.stringify(address)\r\n        })\r\n            .then(response => response.json())\r\n            .then(jsonResponse => {\r\n                console.log('new address');\r\n                console.log(jsonResponse);\r\n                console.log('new address');\r\n\r\n                //this.getAddresses();\r\n                //console.log(jsonResponse.message);\r\n                const updatedAddressList = jsonResponse.message.address;\r\n                this.setState({\r\n                    isAddressConfirm: true,\r\n                    address: {\r\n                        ...this.state.address,\r\n                        ...address.address\r\n                    },\r\n                    addresses: updatedAddressList,\r\n                    selectedAddress: updatedAddressList[updatedAddressList.length - 1]._id\r\n                });\r\n\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    confirmDeliveryAddress = () => {\r\n        this.setState({\r\n            isAddressConfirm: true\r\n        });\r\n\r\n    }\r\n\r\n    confirmOrder = () => {\r\n        this.setState({\r\n            isOrderConfirm: true\r\n        })\r\n    }\r\n\r\n    selectPaymentOption = (e) => {\r\n        this.setState({\r\n            selectedPaymentType: e.target.value\r\n        })\r\n    }\r\n\r\n    submitOrder = async () => {\r\n\r\n        if(!this.state.isOrderConfirm){\r\n            return;\r\n        }\r\n\r\n        if(this.state.selectedPaymentType !== 'cod'){\r\n            return;\r\n        }\r\n\r\n        const order = this.props.cart.cartItem.map(item => {\r\n            return {\r\n                product: item.product,\r\n                price: item.price,\r\n                quantity: item.quantity\r\n            }\r\n        });\r\n\r\n        try{\r\n\r\n            const response = await fetch(`${base_url}/order/create`,{\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'auth-token': this.props.auth.token\r\n                },\r\n                body: JSON.stringify({\r\n                    user: this.props.auth.user.userId,\r\n                    address: this.state.selectedAddress,\r\n                    order: order,\r\n                    paymentType: 'COD',\r\n                    paymentStatus: 'pending'\r\n                }),\r\n                method: 'POST'\r\n            });\r\n\r\n            const jsonResponse = await response.json();\r\n            if(response.status === 201){\r\n                this.props.clearCart();\r\n                this.props.history.push({\r\n                    pathname: '/thank-you',\r\n                    search: '?orderid='+jsonResponse.message._id,\r\n                    state: jsonResponse.message\r\n                });\r\n            }\r\n\r\n        }catch(error){\r\n            console.log(error);\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        let address;\r\n        if(this.state.isAddressConfirm && !this.state.newAddress){\r\n            address = this.state.addresses.find(address => address._id === this.state.selectedAddress);\r\n        }else{\r\n            address = this.state.address;\r\n        }\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <Header />\r\n                <div className=\"Content\">\r\n                    <div className=\"PlaceOrderWrapper\">\r\n                        <div className=\"DeliveryAddress\">\r\n                            <div className=\"Card\">\r\n                                <p className=\"CardText\">Login {this.props.auth.isAuthenticated ? <i className=\"fa fa-check\"/> : null}</p>\r\n                                <p className=\"CardText\">Email: {this.props.auth.user.email}</p>\r\n                            </div>\r\n                            {\r\n                                this.state.isAddressConfirm ?\r\n                                    <div className=\"Card\">\r\n                                        <p className=\"CardText\">Delivery Address {this.state.isAddressConfirm ? <i className=\"fa fa-check\"/> : null}</p>\r\n                                        <p>\r\n                                            <span>{`${address.fullName} - ${address.mobileNumber} - `}</span>\r\n                                            <span>{ `${address.address}, ${address.cityDistrictTown}, ${address.state} - ${address.pinCode}`}</span>\r\n                                        </p>\r\n                                    </div> :\r\n\r\n                                    <React.Fragment>\r\n                                        <div className=\"Card\">\r\n                                            <h4>Delivery Address</h4>\r\n                                            {\r\n                                                this.state.addresses.length && this.state.addresses.map(address =>\r\n                                                    <DeliveryAddress\r\n                                                        key={address._id}\r\n                                                        onAddressSelection={this.addressSelector}\r\n                                                        value={this.state.selectedAddress}\r\n                                                        address={address} />\r\n                                                )\r\n                                            }\r\n                                            {\r\n                                                this.state.existingAddress ?\r\n                                                    <div className=\"DeliveryButtonContainer\" >\r\n                                                        <button onClick={this.confirmDeliveryAddress} className=\"DeliveryAddressButton\">Deliver Here</button>\r\n                                                    </div> : null\r\n                                            }\r\n\r\n                                        </div>\r\n                                        <div className=\"Card\">\r\n                                            <div>\r\n                                                <RadioButton\r\n                                                    name=\"address\"\r\n                                                    label=\"Add new Address\"\r\n                                                    value={this.state.selectedAddress}\r\n                                                    onChange={this.newAddressSelection}\r\n                                                />\r\n                                            </div>\r\n                                            {\r\n                                                this.state.newAddress ?\r\n                                                    <AddressForm\r\n                                                        address={this.state.address}\r\n                                                        inputHandler={this.inputHandler}\r\n                                                        addressSubmitHandler={this.addressSubmitHandler}\r\n                                                    /> : null\r\n                                            }\r\n                                        </div>\r\n                                    </React.Fragment>\r\n\r\n                            }\r\n\r\n                            {\r\n                                this.state.isOrderConfirm ?\r\n                                    <div className=\"Card\">\r\n                                        <p className=\"CardText\">Order Summary <i className=\"fa fa-check\"/></p>\r\n                                    </div> :\r\n                                    this.state.isAddressConfirm ?\r\n                                        <div className=\"Card\">\r\n                                            <h4 className=\"CardText\">Order Summary </h4>\r\n                                            {\r\n                                                this.props.cart.cartItem.map(item => (\r\n                                                    <div key={item.product} style={{display: 'flex', margin: '5px 0', alignItems: 'center'}}>\r\n                                                        <div style={{width: '60px', height: '60px', overflow: 'hidden', position: 'relative'}}>\r\n                                                            <img style={{maxWidth: '100%', maxHeight: '100%', position: 'absolute', left: '50%', transform: 'translateX(-50%)'}} src={item.image} alt=\"\" />\r\n                                                        </div>\r\n                                                        <div>\r\n                                                            <h5>{item.name}</h5>\r\n                                                            <h6>Quantity : {item.quantity}</h6>\r\n                                                            <h6>${item.total}</h6>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                ))\r\n                                            }\r\n                                            <button onClick={this.confirmOrder} className=\"ContinueButton\">Continue</button>\r\n                                        </div>\r\n                                        : null\r\n                            }\r\n\r\n                            {\r\n                                this.state.isOrderConfirm ?\r\n                                    <div className=\"Card\">\r\n                                        <h4 className=\"CardText\">Payment Option</h4>\r\n                                        <ul>\r\n                                            {\r\n                                                this.state.paymentTypes.map(payment =>\r\n                                                    <li className=\"paymentType\" key={payment.id}>\r\n                                                        <RadioButton\r\n                                                            key={payment.id}\r\n                                                            name=\"paymentType\"\r\n                                                            label={payment.label}\r\n                                                            value={payment.value}\r\n                                                            onChange={this.selectPaymentOption}\r\n                                                        />\r\n                                                    </li>)\r\n                                            }\r\n                                        </ul>\r\n                                        {\r\n                                            this.state.selectedPaymentType !== 'cod' ?\r\n                                                <p className=\"ErrorMessage\">Sorry, Only Cash on Delivery is available</p> : null\r\n                                        }\r\n                                        <button className=\"PaymentConfirm\" onClick={this.submitOrder}>Confirm Order</button>\r\n\r\n                                    </div> : null\r\n                            }\r\n\r\n                        </div>\r\n                        <CartPrice />\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        auth: state.auth,\r\n        cart: state.cart\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getToken: () => dispatch(authActions.getToken()),\r\n        clearCart: () => dispatch(cartActions.clearCart())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PlaceOrder);","import React, { Component } from 'react';\r\nimport Header from '../../components/Header/Header';\r\nimport './thankyou.styles.css';\r\n\r\nclass ThankYou extends Component{\r\n\r\n    render() {\r\n\r\n        const queryParams = this.props.location.search.split(\"?\")[1];\r\n        const orderId = queryParams.split(\"=\")[1];\r\n\r\n        return (\r\n            <div>\r\n                <Header />\r\n                <div className=\"Content\">\r\n                    <div className=\"ThankyouPage\">\r\n                        <h1>Thank you for your order</h1>\r\n                        <p className=\"OrderId\">Order id is: {orderId.toLocaleUpperCase()}</p>\r\n                        <p className=\"SmallText\">You will receive an email confirmation shortly at email@gmail.com</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default ThankYou;","import React, { Component } from 'react';\r\nimport './orders.styles.css';\r\nimport Header from '../../components/Header/Header';\r\nimport * as authActions from '../../store/actions/authActions';\r\nimport { connect } from 'react-redux';\r\nimport { base_url } from '../../constants';\r\n\r\nclass Orders extends Component{\r\n\r\n    state = {\r\n        ordersList: []\r\n    }\r\n\r\n    componentDidMount(){\r\n\r\n        if(!this.props.auth.isAuthenticated){\r\n            this.props.getToken()\r\n                .then(result => {\r\n                    if(result){\r\n                        this.getOrders();\r\n                    }else{\r\n                        this.props.history.push('/login');\r\n                    }\r\n                })\r\n        }else{\r\n            this.getOrders();\r\n        }\r\n\r\n    }\r\n\r\n    getOrders = () => {\r\n        console.log(this.props.auth.isAuthenticated)\r\n        const token =  this.props.auth.token;\r\n        const userId = this.props.auth.user.userId;\r\n        fetch(`${base_url}/order/getorders/${userId}`, {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'auth-token': token\r\n            }\r\n        })\r\n            .then(response => response.json())\r\n            .then(jsonResponse => {\r\n                console.log(jsonResponse);\r\n                this.setState({\r\n                    ordersList: jsonResponse.message\r\n                });\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    formatDate = (date) => {\r\n        let d = new Date(date);\r\n        return `${d.getDate()}/${d.getMonth() + 1}/${d.getFullYear()}`;\r\n    }\r\n\r\n    getOrderTotal = (id) => {\r\n        const singleOrder = this.state.ordersList.find(order => order._id === id);\r\n        let orderTotal = 0;\r\n        singleOrder.order.forEach(order => {\r\n            orderTotal = orderTotal + (order.price * order.quantity)\r\n        });\r\n\r\n        return orderTotal;\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <Header />\r\n                <br/>\r\n                <div className=\"Content\">\r\n                    <div className=\"Card\">\r\n                        <p className=\"CardText\">My Orders</p>\r\n                        {\r\n                            this.state.ordersList.map(order => {\r\n                                return (\r\n                                    <div key={order._id} className=\"Order\">\r\n                                        <div className=\"OrderHeader\">\r\n                                            <a href=\"#\">{order._id}</a>\r\n                                        </div>\r\n                                        <div className=\"OrderDescription\">\r\n                                            <div className=\"od1\">\r\n                                                <p className=\"odtitle\">Delivered Address</p>\r\n                                                <p>{`${order.address.address} ${order.address.cityDistrictTown} ${order.address.state} - ${order.address.pinCode}`}</p>\r\n                                            </div>\r\n                                            <div className=\"od2\">\r\n                                                <p className=\"odtitle\">Payment Type</p>\r\n                                                <a className=\"odp\">{order.paymentType}</a>\r\n                                            </div>\r\n                                            <div className=\"od3\">\r\n                                                <p className=\"odtitle\">Payment Status</p>\r\n                                                <a className=\"odp\">{order.paymentStatus}</a>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                        <div>\r\n                                            {order.order.map(item => (\r\n                                                <div key={item._id} style={{display: 'flex', alignItems: 'center', margin: '5px 0', borderBottom: '1px solid #cecece'}}>\r\n                                                    <div style={{width: '80px', height: '80px', overflow: 'hidden', position: 'relative'}} className=\"ImageContainer\">\r\n                                                        <img style={{maxWidth: '100%', maxHeight: '100%', position: 'absolute', left: '50%', transform: 'translateX(-50%)'}} src={item.product.productPic[0].img}/>\r\n                                                    </div>\r\n                                                    <div>\r\n                                                        <p className=\"odtitle\">{item.product.name}</p>\r\n                                                        <div style={{fontSize: '14px', color: '#555', fontWeight: 'bold'}}>\r\n                                                            <p>Quantity: {item.quantity}</p>\r\n                                                            <p>${item.price * item.quantity}</p>\r\n                                                        </div>\r\n\r\n                                                    </div>\r\n                                                </div>\r\n                                            ))}\r\n                                        </div>\r\n                                        <div className=\"OrderFooter\">\r\n                                            <p>Ordered On <span>{this.formatDate(order.orderDate)}</span></p>\r\n                                            <p><b>Order Total <span>${this.getOrderTotal(order._id)}</span></b></p>\r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n                            })\r\n                        }\r\n\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        auth: state.auth\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getToken: () => dispatch(authActions.getToken())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Orders);","import React from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport Shop from './containers/Shop/Shop';\r\nimport Login from './containers/Login/login';\r\nimport Signup from './containers/Signup/signup';\r\nimport AddCategory from \"./containers/AdminPanel/CategoryManagement/addCategory\";\r\nimport AddManager from \"./containers/AdminPanel/ManagerManagement/addManager\";\r\nimport AddProducts from \"./containers/ManagerPanel/addProducts\";\r\n//import ForgetPassword from './ForgetPassword';\r\n//import ControlPanel from './ControlPanel';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport authReducers from './store/reducers/authReducers';\r\nimport PrivateRoute from \"./PrivateRoute\";\r\nimport productReducers from './store/reducers/productReducers';\r\nimport ProductDetails from './containers/ProductDetails/productDetails';\r\nimport Cart from './containers/Cart/cart';\r\nimport cartReducers from './store/reducers/cartReducer';\r\n\r\nimport PlaceOrder from './containers/PlaceOrder/PlaceOrder';\r\nimport ThankYou from './containers/ThankYou/thankyou';\r\nimport Orders from './containers/Orders/orders';\r\n\r\n\r\nconst rootReducers = combineReducers({\r\n  auth: authReducers,\r\n  products: productReducers,\r\n  cart: cartReducers\r\n});\r\n\r\nconst store = createStore(rootReducers, applyMiddleware(thunk));\r\n\r\nwindow.store = store;\r\n\r\nfunction App() {\r\n  return (\r\n\r\n      <Provider store={store}>\r\n        <Router>\r\n          <div className=\"App\">\r\n            <Switch>\r\n\r\n              <Route path=\"/login\" component={Login} />\r\n              <Route path=\"/signup\" component={Signup} />\r\n\r\n              {/*<Route path=\"/forget-password\" component={ForgetPassword} />*/}\r\n              {/*<Route path=\"/cpanel\" component={ControlPanel} />*/}\r\n              <Route path=\"/products/:category/:slug\" component={ProductDetails} />\r\n              <Route path=\"/products\"  component={Shop} />\r\n              <PrivateRoute path=\"/cart\" component={Cart} />\r\n              <PrivateRoute path=\"/place-order\" component={PlaceOrder} />\r\n              <PrivateRoute path=\"/thank-you\" component={ThankYou} />\r\n              <PrivateRoute path=\"/orders\" component={Orders} />\r\n              <PrivateRoute path=\"/addproduct\" component={AddProducts} />\r\n              <PrivateRoute path=\"/addcategory\" component={AddCategory} />\r\n              <PrivateRoute path=\"/addmanager\" component={AddManager} />\r\n              <Route path=\"/\"  component={Shop} />\r\n            </Switch>\r\n\r\n\r\n          </div>\r\n        </Router>\r\n      </Provider>\r\n\r\n\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n// ReactDOM.render(\r\n//   <React.StrictMode>\r\n//     <App />\r\n//   </React.StrictMode>,\r\n//   document.getElementById('root')\r\n// );\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}